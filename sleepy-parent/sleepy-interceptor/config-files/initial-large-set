# Note the below may include some private methods because someone was lazy and wrote a script to do this.

java/lang/System.currentTimeMillis()J

# Flaky stuff can happen with sockets when it comes to connections


java/io/OutputStream.close()V
java/io/OutputStream.flush()V
java/net/Socket.bind(Ljava/net/SocketAddress;)V
java/net/Socket.connect(Ljava/net/SocketAddress;)V
java/net/Socket.connect(Ljava/net/SocketAddress;I)V







java/net/ServerSocket.accept()Ljava/net/Socket;
java/net/ServerSocket.bind(Ljava/net/SocketAddress;)V
java/net/ServerSocket.bind(Ljava/net/SocketAddress;I)V
java/net/ServerSocket.close()V
java/net/ServerSocket.getReuseAddress()Z
java/net/ServerSocket.getSoTimeout()I
java/net/ServerSocket.implAccept(Ljava/net/Socket;)V
java/net/ServerSocket.isBound()Z
java/net/ServerSocket.isClosed()Z



# Below are synchronization primitives.
java/lang/Object.wait()V
java/lang/Object.wait(J)V
java/lang/Object.wait(JI)V
java/lang/Object.notify()V
java/lang/Object.notifyAll()V
java/lang/Object.notifyAll()V
java/lang/Thread.sleep(J)V
java/lang/Thread.sleep(JI)V
java/lang/Thread.sleep(J)V
java/lang/Thread.sleep(JI)V
java/lang/Thread.yield()V
java/util/concurrent/CountDownLatch.await()V
java/util/concurrent/CountDownLatch.await(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/CountDownLatch.await()V
java/util/concurrent/CountDownLatch.await(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/CountDownLatch.countDown()V
java/util/concurrent/CountDownLatch.getCount()J
java/util/concurrent/Callable.call()Ljava/lang/Object;
java/util/concurrent/Semaphore.acquire()V
java/util/concurrent/Semaphore.acquire(I)V
java/util/concurrent/Semaphore.acquireUninterruptibly()V
java/util/concurrent/Semaphore.acquireUninterruptibly(I)V
java/util/concurrent/Semaphore.acquire()V
java/util/concurrent/Semaphore.acquire(I)V
java/util/concurrent/Semaphore.acquireUninterruptibly()V
java/util/concurrent/Semaphore.acquireUninterruptibly(I)V
java/util/concurrent/Semaphore.acquireUninterruptibly()V
java/util/concurrent/Semaphore.acquireUninterruptibly(I)V
java/util/concurrent/Semaphore.acquireUninterruptibly()V
java/util/concurrent/Semaphore.acquireUninterruptibly(I)V
java/util/concurrent/Semaphore.drainPermits()I
java/util/concurrent/Semaphore.tryAcquire()Z
java/util/concurrent/Semaphore.tryAcquire(I)Z
java/util/concurrent/Semaphore.tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire()Z
java/util/concurrent/Semaphore.tryAcquire(I)Z
java/util/concurrent/Semaphore.tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire()Z
java/util/concurrent/Semaphore.tryAcquire(I)Z
java/util/concurrent/Semaphore.tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire()Z
java/util/concurrent/Semaphore.tryAcquire(I)Z
java/util/concurrent/Semaphore.tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.reducePermits(I)V
java/util/concurrent/Semaphore.release()V
java/util/concurrent/Semaphore.release(I)V
java/util/concurrent/Semaphore.release()V
java/util/concurrent/Semaphore.release(I)V
java/util/concurrent/Semaphore.availablePermits()I
java/util/concurrent/CyclicBarrier.await()I
java/util/concurrent/CyclicBarrier.await(JLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/CyclicBarrier.await()I
java/util/concurrent/CyclicBarrier.await(JLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/CyclicBarrier.reset()V
java/util/concurrent/CyclicBarrier.isBroken()Z
java/util/concurrent/CyclicBarrier.getNumberWaiting()I
java/util/concurrent/Phaser.arrive()I
java/util/concurrent/Phaser.arriveAndAwaitAdvance()I
java/util/concurrent/Phaser.arriveAndDeregister()I
java/util/concurrent/Phaser.arrivedOf(J)I
java/util/concurrent/Phaser.getUnarrivedParties()I
java/util/concurrent/Phaser.unarrivedOf(J)I
java/util/concurrent/Phaser.arriveAndAwaitAdvance()I
java/util/concurrent/Phaser.arriveAndDeregister()I
java/util/concurrent/Phaser.awaitAdvance(I)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(I)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(IJLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(I)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(IJLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(I)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(IJLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/Phaser.bulkRegister(I)I
java/util/concurrent/Phaser.forceTermination()V
java/util/concurrent/Phaser.getArrivedParties()I
java/util/concurrent/Phaser.getRegisteredParties()I
java/util/concurrent/Phaser.getUnarrivedParties()I
java/util/concurrent/Phaser.isTerminated()Z
java/util/concurrent/Phaser.arriveAndDeregister()I
java/util/concurrent/Phaser.register()I
java/util/concurrent/Exchanger.exchange(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/Exchanger.exchange(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/Exchanger.exchange(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/Exchanger.exchange(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread()Ljava/lang/Thread;
java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread(Ljava/lang/Thread;)V
java/util/concurrent/locks/Condition.await()V
java/util/concurrent/locks/Condition.await(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/Condition.awaitNanos(J)J
java/util/concurrent/locks/Condition.awaitUninterruptibly()V
java/util/concurrent/locks/Condition.awaitUntil(Ljava/util/Date;)Z
java/util/concurrent/locks/Condition.await()V
java/util/concurrent/locks/Condition.await(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/Condition.awaitNanos(J)J
java/util/concurrent/locks/Condition.awaitUninterruptibly()V
java/util/concurrent/locks/Condition.awaitUntil(Ljava/util/Date;)Z
java/util/concurrent/locks/Condition.awaitNanos(J)J
java/util/concurrent/locks/Condition.awaitUninterruptibly()V
java/util/concurrent/locks/Condition.awaitUntil(Ljava/util/Date;)Z
java/util/concurrent/locks/Condition.signal()V
java/util/concurrent/locks/Condition.signalAll()V
java/util/concurrent/locks/Condition.signalAll()V
java/util/concurrent/locks/Lock.lock()V
java/util/concurrent/locks/Lock.lockInterruptibly()V
java/util/concurrent/locks/Lock.newCondition()Ljava/util/concurrent/locks/Condition;
java/util/concurrent/locks/Lock.tryLock()Z
java/util/concurrent/locks/Lock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/Lock.unlock()V
java/util/concurrent/locks/Lock.lockInterruptibly()V
java/util/concurrent/locks/Lock.tryLock()Z
java/util/concurrent/locks/Lock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/Lock.tryLock()Z
java/util/concurrent/locks/Lock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/Lock.unlock()V
java/util/concurrent/locks/ReentrantLock.getHoldCount()I
java/util/concurrent/locks/ReentrantLock.getQueueLength()I
java/util/concurrent/locks/ReentrantLock.getWaitQueueLength(Ljava/util/concurrent/locks/Condition;)I
java/util/concurrent/locks/ReentrantLock.hasQueuedThread(Ljava/lang/Thread;)Z
java/util/concurrent/locks/ReentrantLock.hasQueuedThreads()Z
java/util/concurrent/locks/ReentrantLock.hasQueuedThreads()Z
java/util/concurrent/locks/ReentrantLock.hasWaiters(Ljava/util/concurrent/locks/Condition;)Z
java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread()Z
java/util/concurrent/locks/ReentrantLock.isLocked()Z


java/util/concurrent/locks/ReentrantLock.getHoldCount()I
java/util/concurrent/locks/ReentrantLock.getOwner()Ljava/lang/Thread;
java/util/concurrent/locks/ReentrantLock.getQueueLength()I
java/util/concurrent/locks/ReentrantLock.getQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/ReentrantLock.getWaitQueueLength(Ljava/util/concurrent/locks/Condition;)I
java/util/concurrent/locks/ReentrantLock.getWaitingThreads(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection;
java/util/concurrent/locks/ReentrantLock.hasQueuedThread(Ljava/lang/Thread;)Z
java/util/concurrent/locks/ReentrantLock.hasQueuedThreads()Z
java/util/concurrent/locks/ReentrantLock.hasWaiters(Ljava/util/concurrent/locks/Condition;)Z
java/util/concurrent/locks/ReentrantLock.isFair()Z
java/util/concurrent/locks/ReentrantLock.isHeldByCurrentThread()Z
java/util/concurrent/locks/ReentrantLock.isLocked()Z
java/util/concurrent/locks/ReentrantLock.lock()V
java/util/concurrent/locks/ReentrantLock.lockInterruptibly()V
java/util/concurrent/locks/ReentrantLock.newCondition()Ljava/util/concurrent/locks/Condition;

java/util/concurrent/locks/ReentrantLock.tryLock()Z
java/util/concurrent/locks/ReentrantLock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/ReentrantLock.unlock()V
java/util/concurrent/locks/ReentrantLock.lockInterruptibly()V
java/util/concurrent/locks/ReentrantLock.tryLock()Z
java/util/concurrent/locks/ReentrantLock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/ReentrantLock.tryLock()Z
java/util/concurrent/locks/ReentrantLock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/ReentrantLock.unlock()V
java/util/concurrent/locks/ReentrantLock.getOwner()Ljava/lang/Thread;
java/util/concurrent/locks/ReentrantLock.getQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/ReentrantLock.getWaitingThreads(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection;
java/util/concurrent/Future.cancel(Z)Z
java/util/concurrent/Future.get()Ljava/lang/Object;
java/util/concurrent/Future.get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/Future.isCancelled()Z
java/util/concurrent/Future.isDone()Z
java/util/concurrent/locks/StampedLock.acquireRead(ZJ)J
java/util/concurrent/locks/StampedLock.acquireWrite(ZJ)J
java/util/concurrent/locks/StampedLock.asReadLock()Ljava/util/concurrent/locks/Lock;
java/util/concurrent/locks/StampedLock.asReadWriteLock()Ljava/util/concurrent/locks/ReadWriteLock;
java/util/concurrent/locks/StampedLock.asWriteLock()Ljava/util/concurrent/locks/Lock;
java/util/concurrent/locks/StampedLock.cancelWaiter(Ljava/util/concurrent/locks/StampedLock$WNode;Ljava/util/concurrent/locks/StampedLock$WNode;Z)J
java/util/concurrent/locks/StampedLock.getReadLockCount()I
java/util/concurrent/locks/StampedLock.getReadLockCount(J)I
java/util/concurrent/locks/StampedLock.isReadLocked()Z
java/util/concurrent/locks/StampedLock.isWriteLocked()Z
java/util/concurrent/locks/StampedLock.readLock()J
java/util/concurrent/locks/StampedLock.readLockInterruptibly()J
java/util/concurrent/locks/StampedLock.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/locks/StampedLock.release(Ljava/util/concurrent/locks/StampedLock$WNode;)V
java/util/concurrent/locks/StampedLock.tryConvertToOptimisticRead(J)J
java/util/concurrent/locks/StampedLock.tryConvertToReadLock(J)J
java/util/concurrent/locks/StampedLock.tryConvertToWriteLock(J)J
java/util/concurrent/locks/StampedLock.tryDecReaderOverflow(J)J
java/util/concurrent/locks/StampedLock.tryIncReaderOverflow(J)J
java/util/concurrent/locks/StampedLock.tryOptimisticRead()J
java/util/concurrent/locks/StampedLock.tryReadLock()J
java/util/concurrent/locks/StampedLock.tryReadLock(JLjava/util/concurrent/TimeUnit;)J
java/util/concurrent/locks/StampedLock.tryUnlockRead()Z
java/util/concurrent/locks/StampedLock.tryUnlockWrite()Z
java/util/concurrent/locks/StampedLock.tryWriteLock()J
java/util/concurrent/locks/StampedLock.tryWriteLock(JLjava/util/concurrent/TimeUnit;)J
java/util/concurrent/locks/StampedLock.unlock(J)V
java/util/concurrent/locks/StampedLock.unlockRead(J)V
java/util/concurrent/locks/StampedLock.unlockWrite(J)V
java/util/concurrent/locks/StampedLock.unstampedUnlockRead()V
java/util/concurrent/locks/StampedLock.unstampedUnlockWrite()V
java/util/concurrent/locks/StampedLock.validate(J)Z
java/util/concurrent/locks/StampedLock.writeLock()J
java/util/concurrent/locks/StampedLock.writeLockInterruptibly()J

java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock()V
java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lockInterruptibly()V
java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.tryLock()Z
java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock()V


java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.getHoldCount()I
java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.isHeldByCurrentThread()Z
java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock()V
java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lockInterruptibly()V

java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.tryLock(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock()V

java/util/concurrent/locks/LockSupport.getBlocker(Ljava/lang/Thread;)Ljava/lang/Object;
java/util/concurrent/locks/LockSupport.nextSecondarySeed()I
java/util/concurrent/locks/LockSupport.park()V
java/util/concurrent/locks/LockSupport.park(Ljava/lang/Object;)V
java/util/concurrent/locks/LockSupport.parkNanos(J)V
java/util/concurrent/locks/LockSupport.parkNanos(Ljava/lang/Object;J)V
java/util/concurrent/locks/LockSupport.parkUntil(J)V
java/util/concurrent/locks/LockSupport.parkUntil(Ljava/lang/Object;J)V
java/util/concurrent/locks/LockSupport.setBlocker(Ljava/lang/Thread;Ljava/lang/Object;)V
java/util/concurrent/locks/LockSupport.unpark(Ljava/lang/Thread;)V

java/util/concurrent/locks/AbstractQueuedLongSynchronizer.acquire(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.acquireInterruptibly(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.acquireQueued(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.acquireShared(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.acquireSharedInterruptibly(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.addWaiter(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.apparentlyFirstQueuedIsExclusive()Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.cancelAcquire(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.compareAndSetHead(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.compareAndSetNext(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.compareAndSetState(JJ)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.compareAndSetTail(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.compareAndSetWaitStatus(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;II)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.doAcquireInterruptibly(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.doAcquireNanos(JJ)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.doAcquireShared(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.doAcquireSharedInterruptibly(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.doAcquireSharedNanos(JJ)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.doReleaseShared()V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.enq(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.findNodeFromTail(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.fullGetFirstQueuedThread()Ljava/lang/Thread;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.fullyRelease(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)J
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getFirstQueuedThread()Ljava/lang/Thread;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getQueueLength()I
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getSharedQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getState()J
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getWaitQueueLength(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)I
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.getWaitingThreads(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.hasContended()Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.hasQueuedPredecessors()Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.hasQueuedThreads()Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.hasWaiters(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.isHeldExclusively()Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.isOnSyncQueue(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.isQueued(Ljava/lang/Thread;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.owns(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$ConditionObject;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.parkAndCheckInterrupt()Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.release(J)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.releaseShared(J)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.selfInterrupt()V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.setHead(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.setHeadAndPropagate(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.setState(J)V
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.shouldParkAfterFailedAcquire(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.transferAfterCancelledWait(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.transferForSignal(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.tryAcquire(J)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.tryAcquireNanos(JJ)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.tryAcquireShared(J)J
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.tryAcquireSharedNanos(JJ)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.tryRelease(J)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.tryReleaseShared(J)Z
java/util/concurrent/locks/AbstractQueuedLongSynchronizer.unparkSuccessor(Ljava/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node;)V

java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireSharedInterruptibly(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;
java/util/concurrent/locks/AbstractQueuedSynchronizer.apparentlyFirstQueuedIsExclusive()Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.cancelAcquire(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetHead(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetNext(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState(II)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetWaitStatus(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;II)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireNanos(IJ)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireShared(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireSharedNanos(IJ)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.doReleaseShared()V
java/util/concurrent/locks/AbstractQueuedSynchronizer.enq(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;
java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.fullGetFirstQueuedThread()Ljava/lang/Thread;
java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)I
java/util/concurrent/locks/AbstractQueuedSynchronizer.getExclusiveQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedSynchronizer.getFirstQueuedThread()Ljava/lang/Thread;
java/util/concurrent/locks/AbstractQueuedSynchronizer.getQueueLength()I
java/util/concurrent/locks/AbstractQueuedSynchronizer.getQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedSynchronizer.getSharedQueuedThreads()Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedSynchronizer.getState()I
java/util/concurrent/locks/AbstractQueuedSynchronizer.getWaitQueueLength(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)I
java/util/concurrent/locks/AbstractQueuedSynchronizer.getWaitingThreads(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Ljava/util/Collection;
java/util/concurrent/locks/AbstractQueuedSynchronizer.hasContended()Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.hasQueuedPredecessors()Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.hasQueuedThreads()Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.hasWaiters(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.isHeldExclusively()Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.isQueued(Ljava/lang/Thread;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.owns(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt()Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.release(I)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared(I)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.selfInterrupt()V
java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.setHeadAndPropagate(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.setState(I)V
java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z

java/util/concurrent/locks/AbstractQueuedSynchronizer.transferAfterCancelledWait(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquire(I)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireNanos(IJ)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireShared(I)I
java/util/concurrent/locks/AbstractQueuedSynchronizer.tryAcquireSharedNanos(IJ)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.tryRelease(I)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.tryReleaseShared(I)Z
java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor(Ljava/util/concurrent/locks/AbstractQueuedSynchronizer$Node;)V


java/util/concurrent/ExecutorService.execute(Ljava/lang/Runnable;)V
java/util/concurrent/ExecutorService.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ExecutorService.invokeAll(Ljava/util/Collection;)Ljava/util/List;
java/util/concurrent/ExecutorService.invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
java/util/concurrent/ExecutorService.invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
java/util/concurrent/ExecutorService.invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/ExecutorService.isShutdown()Z
java/util/concurrent/ExecutorService.isTerminated()Z
java/util/concurrent/ExecutorService.shutdown()V
java/util/concurrent/ExecutorService.shutdownNow()Ljava/util/List;
java/util/concurrent/ExecutorService.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorService.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorService.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;

java/util/concurrent/ThreadPoolExecutor.addWorker(Ljava/lang/Runnable;Z)Z
java/util/concurrent/ThreadPoolExecutor.addWorkerFailed(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V
java/util/concurrent/ThreadPoolExecutor.advanceRunState(I)V
java/util/concurrent/ThreadPoolExecutor.afterExecute(Ljava/lang/Runnable;Ljava/lang/Throwable;)V
java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut(Z)V
java/util/concurrent/ThreadPoolExecutor.allowsCoreThreadTimeOut()Z
java/util/concurrent/ThreadPoolExecutor.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ThreadPoolExecutor.beforeExecute(Ljava/lang/Thread;Ljava/lang/Runnable;)V
java/util/concurrent/ThreadPoolExecutor.checkShutdownAccess()V
java/util/concurrent/ThreadPoolExecutor.compareAndDecrementWorkerCount(I)Z
java/util/concurrent/ThreadPoolExecutor.compareAndIncrementWorkerCount(I)Z
java/util/concurrent/ThreadPoolExecutor.ctlOf(II)I
java/util/concurrent/ThreadPoolExecutor.decrementWorkerCount()V
java/util/concurrent/ThreadPoolExecutor.drainQueue()Ljava/util/List;
java/util/concurrent/ThreadPoolExecutor.ensurePrestart()V
java/util/concurrent/ThreadPoolExecutor.execute(Ljava/lang/Runnable;)V
java/util/concurrent/ThreadPoolExecutor.finalize()V
java/util/concurrent/ThreadPoolExecutor.getActiveCount()I
java/util/concurrent/ThreadPoolExecutor.getCompletedTaskCount()J
java/util/concurrent/ThreadPoolExecutor.getCorePoolSize()I
java/util/concurrent/ThreadPoolExecutor.getKeepAliveTime(Ljava/util/concurrent/TimeUnit;)J
java/util/concurrent/ThreadPoolExecutor.getLargestPoolSize()I
java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize()I
java/util/concurrent/ThreadPoolExecutor.getPoolSize()I
java/util/concurrent/ThreadPoolExecutor.getQueue()Ljava/util/concurrent/BlockingQueue;
java/util/concurrent/ThreadPoolExecutor.getRejectedExecutionHandler()Ljava/util/concurrent/RejectedExecutionHandler;
java/util/concurrent/ThreadPoolExecutor.getTask()Ljava/lang/Runnable;
java/util/concurrent/ThreadPoolExecutor.getTaskCount()J
java/util/concurrent/ThreadPoolExecutor.getThreadFactory()Ljava/util/concurrent/ThreadFactory;
java/util/concurrent/ThreadPoolExecutor.interruptIdleWorkers()V
java/util/concurrent/ThreadPoolExecutor.interruptIdleWorkers(Z)V
java/util/concurrent/ThreadPoolExecutor.interruptWorkers()V
java/util/concurrent/ThreadPoolExecutor.isRunning(I)Z
java/util/concurrent/ThreadPoolExecutor.isRunningOrShutdown(Z)Z
java/util/concurrent/ThreadPoolExecutor.isShutdown()Z
java/util/concurrent/ThreadPoolExecutor.isTerminated()Z
java/util/concurrent/ThreadPoolExecutor.isTerminating()Z
java/util/concurrent/ThreadPoolExecutor.lambda$finalize$0()Ljava/lang/Void;
java/util/concurrent/ThreadPoolExecutor.onShutdown()V
java/util/concurrent/ThreadPoolExecutor.prestartAllCoreThreads()I
java/util/concurrent/ThreadPoolExecutor.prestartCoreThread()Z
java/util/concurrent/ThreadPoolExecutor.processWorkerExit(Ljava/util/concurrent/ThreadPoolExecutor$Worker;Z)V
java/util/concurrent/ThreadPoolExecutor.purge()V
java/util/concurrent/ThreadPoolExecutor.reject(Ljava/lang/Runnable;)V
java/util/concurrent/ThreadPoolExecutor.remove(Ljava/lang/Runnable;)Z
java/util/concurrent/ThreadPoolExecutor.runStateAtLeast(II)Z
java/util/concurrent/ThreadPoolExecutor.runStateLessThan(II)Z
java/util/concurrent/ThreadPoolExecutor.runStateOf(I)I
java/util/concurrent/ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V
java/util/concurrent/ThreadPoolExecutor.setCorePoolSize(I)V
java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime(JLjava/util/concurrent/TimeUnit;)V
java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize(I)V
java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler(Ljava/util/concurrent/RejectedExecutionHandler;)V
java/util/concurrent/ThreadPoolExecutor.setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
java/util/concurrent/ThreadPoolExecutor.shutdown()V
java/util/concurrent/ThreadPoolExecutor.shutdownNow()Ljava/util/List;
java/util/concurrent/ThreadPoolExecutor.terminated()V
java/util/concurrent/ThreadPoolExecutor.tryTerminate()V
java/util/concurrent/ThreadPoolExecutor.workerCountOf(I)I





java/util/concurrent/ForkJoinPool.awaitJoin(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinTask;J)I
java/util/concurrent/ForkJoinPool.awaitQuiescence(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ForkJoinPool.awaitRunStateLock()I
java/util/concurrent/ForkJoinPool.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ForkJoinPool.awaitWork(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Z
java/util/concurrent/ForkJoinPool.checkFactory(Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;)Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;
java/util/concurrent/ForkJoinPool.checkParallelism(I)I
java/util/concurrent/ForkJoinPool.checkPermission()V
java/util/concurrent/ForkJoinPool.commonPool()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinPool.commonSubmitterQueue()Ljava/util/concurrent/ForkJoinPool$WorkQueue;
java/util/concurrent/ForkJoinPool.createWorker()Z
java/util/concurrent/ForkJoinPool.deregisterWorker(Ljava/util/concurrent/ForkJoinWorkerThread;Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinPool.drainTasksTo(Ljava/util/Collection;)I
java/util/concurrent/ForkJoinPool.execute(Ljava/lang/Runnable;)V
java/util/concurrent/ForkJoinPool.execute(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.externalHelpComplete(Ljava/util/concurrent/CountedCompleter;I)I
java/util/concurrent/ForkJoinPool.externalPush(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.externalSubmit(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.findNonEmptyStealQueue()Ljava/util/concurrent/ForkJoinPool$WorkQueue;
java/util/concurrent/ForkJoinPool.getActiveThreadCount()I
java/util/concurrent/ForkJoinPool.getAsyncMode()Z
java/util/concurrent/ForkJoinPool.getCommonPoolParallelism()I
java/util/concurrent/ForkJoinPool.getFactory()Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;
java/util/concurrent/ForkJoinPool.getParallelism()I
java/util/concurrent/ForkJoinPool.getQueuedSubmissionCount()I
java/util/concurrent/ForkJoinPool.getQueuedTaskCount()J
java/util/concurrent/ForkJoinPool.getRunningThreadCount()I
java/util/concurrent/ForkJoinPool.getStealCount()J
java/util/concurrent/ForkJoinPool.getSurplusQueuedTaskCount()I
java/util/concurrent/ForkJoinPool.getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
java/util/concurrent/ForkJoinPool.hasQueuedSubmissions()Z
java/util/concurrent/ForkJoinPool.helpComplete(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/CountedCompleter;I)I
java/util/concurrent/ForkJoinPool.helpQuiescePool(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V
java/util/concurrent/ForkJoinPool.helpStealer(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.invoke(Ljava/util/concurrent/ForkJoinTask;)Ljava/lang/Object;
java/util/concurrent/ForkJoinPool.invokeAll(Ljava/util/Collection;)Ljava/util/List;
java/util/concurrent/ForkJoinPool.isQuiescent()Z
java/util/concurrent/ForkJoinPool.isShutdown()Z
java/util/concurrent/ForkJoinPool.isTerminated()Z
java/util/concurrent/ForkJoinPool.isTerminating()Z
java/util/concurrent/ForkJoinPool.lockRunState()I
java/util/concurrent/ForkJoinPool.makeCommonPool()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinPool.managedBlock(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
java/util/concurrent/ForkJoinPool.newTaskFor(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/ForkJoinPool.newTaskFor(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/ForkJoinPool.nextPoolId()I
java/util/concurrent/ForkJoinPool.nextTaskFor(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.pollSubmission()Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.quiesceCommonPool()V
java/util/concurrent/ForkJoinPool.registerWorker(Ljava/util/concurrent/ForkJoinWorkerThread;)Ljava/util/concurrent/ForkJoinPool$WorkQueue;
java/util/concurrent/ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V
java/util/concurrent/ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.shutdown()V
java/util/concurrent/ForkJoinPool.shutdownNow()Ljava/util/List;
java/util/concurrent/ForkJoinPool.signalWork([Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/ForkJoinPool.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/ForkJoinPool.submit(Ljava/util/concurrent/ForkJoinTask;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.tryAddWorker(J)V
java/util/concurrent/ForkJoinPool.tryCompensate(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)Z
java/util/concurrent/ForkJoinPool.tryExternalUnpush(Ljava/util/concurrent/ForkJoinTask;)Z
java/util/concurrent/ForkJoinPool.tryRelease(JLjava/util/concurrent/ForkJoinPool$WorkQueue;J)Z
java/util/concurrent/ForkJoinPool.tryTerminate(ZZ)Z
java/util/concurrent/ForkJoinPool.unlockRunState(II)V

java/util/concurrent/Executor.execute(Ljava/lang/Runnable;)V



java/util/concurrent/CompletableFuture.acceptEither(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.acceptEither(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.acceptEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.acceptEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.acceptEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.acceptEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.allOf([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.andTree([Ljava/util/concurrent/CompletableFuture;II)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.anyOf([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.applyToEither(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.applyToEither(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.applyToEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.applyToEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.applyToEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.applyToEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.asyncRunStage(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.asyncSupplyStage(Ljava/util/concurrent/Executor;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.biAccept(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiConsumer;Ljava/util/concurrent/CompletableFuture$BiAccept;)Z
java/util/concurrent/CompletableFuture.biAcceptStage(Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.biApply(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture$BiApply;)Z
java/util/concurrent/CompletableFuture.biApplyStage(Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.biRelay(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)Z
java/util/concurrent/CompletableFuture.biRun(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Runnable;Ljava/util/concurrent/CompletableFuture$BiRun;)Z
java/util/concurrent/CompletableFuture.biRunStage(Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.bipush(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture$BiCompletion;)V
java/util/concurrent/CompletableFuture.cancel(Z)Z
java/util/concurrent/CompletableFuture.casStack(Ljava/util/concurrent/CompletableFuture$Completion;Ljava/util/concurrent/CompletableFuture$Completion;)Z
java/util/concurrent/CompletableFuture.cleanStack()V
java/util/concurrent/CompletableFuture.complete(Ljava/lang/Object;)Z
java/util/concurrent/CompletableFuture.completeExceptionally(Ljava/lang/Throwable;)Z
java/util/concurrent/CompletableFuture.completeNull()Z
java/util/concurrent/CompletableFuture.completeRelay(Ljava/lang/Object;)Z
java/util/concurrent/CompletableFuture.completeThrowable(Ljava/lang/Throwable;)Z
java/util/concurrent/CompletableFuture.completeThrowable(Ljava/lang/Throwable;Ljava/lang/Object;)Z
java/util/concurrent/CompletableFuture.completeValue(Ljava/lang/Object;)Z
java/util/concurrent/CompletableFuture.completedFuture(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.encodeOutcome(Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.encodeRelay(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.encodeThrowable(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture$AltResult;
java/util/concurrent/CompletableFuture.encodeThrowable(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.encodeValue(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.exceptionally(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.exceptionally(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.get()Ljava/lang/Object;
java/util/concurrent/CompletableFuture.get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.getNow(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.getNumberOfDependents()I
java/util/concurrent/CompletableFuture.handle(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.handle(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.handleAsync(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.handleAsync(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.handleAsync(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.handleAsync(Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.internalComplete(Ljava/lang/Object;)Z
java/util/concurrent/CompletableFuture.isCancelled()Z
java/util/concurrent/CompletableFuture.isCompletedExceptionally()Z
java/util/concurrent/CompletableFuture.isDone()Z
java/util/concurrent/CompletableFuture.join()Ljava/lang/Object;
java/util/concurrent/CompletableFuture.lazySetNext(Ljava/util/concurrent/CompletableFuture$Completion;Ljava/util/concurrent/CompletableFuture$Completion;)V
java/util/concurrent/CompletableFuture.obtrudeException(Ljava/lang/Throwable;)V
java/util/concurrent/CompletableFuture.obtrudeValue(Ljava/lang/Object;)V
java/util/concurrent/CompletableFuture.orAccept(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture$OrAccept;)Z
java/util/concurrent/CompletableFuture.orAcceptStage(Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletionStage;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.orApply(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;Ljava/util/concurrent/CompletableFuture$OrApply;)Z
java/util/concurrent/CompletableFuture.orApplyStage(Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletionStage;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.orRelay(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)Z
java/util/concurrent/CompletableFuture.orRun(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/lang/Runnable;Ljava/util/concurrent/CompletableFuture$OrRun;)Z
java/util/concurrent/CompletableFuture.orRunStage(Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.orTree([Ljava/util/concurrent/CompletableFuture;II)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.orpush(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture$BiCompletion;)V
java/util/concurrent/CompletableFuture.postComplete()V
java/util/concurrent/CompletableFuture.postFire(Ljava/util/concurrent/CompletableFuture;I)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.postFire(Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;I)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.push(Ljava/util/concurrent/CompletableFuture$UniCompletion;)V
java/util/concurrent/CompletableFuture.pushStack(Ljava/util/concurrent/CompletableFuture$Completion;)V
java/util/concurrent/CompletableFuture.reportGet(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.reportJoin(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.runAfterBoth(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAfterBoth(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.runAfterBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAfterBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.runAfterBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAfterBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.runAfterEither(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAfterEither(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.runAfterEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAfterEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.runAfterEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAfterEitherAsync(Ljava/util/concurrent/CompletionStage;Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.runAsync(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.runAsync(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.screenExecutor(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor;
java/util/concurrent/CompletableFuture.supplyAsync(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.supplyAsync(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAccept(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAccept(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenAcceptAsync(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAcceptAsync(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenAcceptAsync(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAcceptAsync(Ljava/util/function/Consumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenAcceptBoth(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAcceptBoth(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenAcceptBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAcceptBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenAcceptBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenAcceptBothAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenApply(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenApply(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenApplyAsync(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenApplyAsync(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenApplyAsync(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenApplyAsync(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenCombine(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenCombine(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenCombineAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenCombineAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenCombineAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenCombineAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenCompose(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenCompose(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenComposeAsync(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenComposeAsync(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenComposeAsync(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenComposeAsync(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenRun(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenRun(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenRunAsync(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenRunAsync(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.thenRunAsync(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.thenRunAsync(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.timedGet(J)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.toCompletableFuture()Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.tryPushStack(Ljava/util/concurrent/CompletableFuture$Completion;)Z
java/util/concurrent/CompletableFuture.uniAccept(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture$UniAccept;)Z
java/util/concurrent/CompletableFuture.uniAcceptStage(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.uniApply(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;Ljava/util/concurrent/CompletableFuture$UniApply;)Z
java/util/concurrent/CompletableFuture.uniApplyStage(Ljava/util/concurrent/Executor;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.uniCompose(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;Ljava/util/concurrent/CompletableFuture$UniCompose;)Z
java/util/concurrent/CompletableFuture.uniComposeStage(Ljava/util/concurrent/Executor;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.uniExceptionally(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;Ljava/util/concurrent/CompletableFuture$UniExceptionally;)Z
java/util/concurrent/CompletableFuture.uniExceptionallyStage(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.uniHandle(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture$UniHandle;)Z
java/util/concurrent/CompletableFuture.uniHandleStage(Ljava/util/concurrent/Executor;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.uniRelay(Ljava/util/concurrent/CompletableFuture;)Z
java/util/concurrent/CompletableFuture.uniRun(Ljava/util/concurrent/CompletableFuture;Ljava/lang/Runnable;Ljava/util/concurrent/CompletableFuture$UniRun;)Z
java/util/concurrent/CompletableFuture.uniRunStage(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.uniWhenComplete(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/BiConsumer;Ljava/util/concurrent/CompletableFuture$UniWhenComplete;)Z
java/util/concurrent/CompletableFuture.uniWhenCompleteStage(Ljava/util/concurrent/Executor;Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.waitingGet(Z)Ljava/lang/Object;
java/util/concurrent/CompletableFuture.whenComplete(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.whenComplete(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.whenCompleteAsync(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.whenCompleteAsync(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
java/util/concurrent/CompletableFuture.whenCompleteAsync(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;
java/util/concurrent/CompletableFuture.whenCompleteAsync(Ljava/util/function/BiConsumer;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;


# Atomic package
java/util/concurrent/atomic/AtomicInteger.accumulateAndGet(ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/atomic/AtomicInteger.addAndGet(I)I
java/util/concurrent/atomic/AtomicInteger.compareAndSet(II)Z
java/util/concurrent/atomic/AtomicInteger.decrementAndGet()I
java/util/concurrent/atomic/AtomicInteger.doubleValue()D
java/util/concurrent/atomic/AtomicInteger.floatValue()F
java/util/concurrent/atomic/AtomicInteger.get()I
java/util/concurrent/atomic/AtomicInteger.getAndAccumulate(ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/atomic/AtomicInteger.getAndAdd(I)I
java/util/concurrent/atomic/AtomicInteger.getAndDecrement()I
java/util/concurrent/atomic/AtomicInteger.getAndIncrement()I
java/util/concurrent/atomic/AtomicInteger.getAndSet(I)I
java/util/concurrent/atomic/AtomicInteger.getAndUpdate(Ljava/util/function/IntUnaryOperator;)I
java/util/concurrent/atomic/AtomicInteger.incrementAndGet()I
java/util/concurrent/atomic/AtomicInteger.intValue()I
java/util/concurrent/atomic/AtomicInteger.lazySet(I)V
java/util/concurrent/atomic/AtomicInteger.longValue()J
java/util/concurrent/atomic/AtomicInteger.set(I)V
java/util/concurrent/atomic/AtomicInteger.updateAndGet(Ljava/util/function/IntUnaryOperator;)I
java/util/concurrent/atomic/AtomicInteger.weakCompareAndSet(II)Z

java/util/concurrent/atomic/AtomicStampedReference.attemptStamp(Ljava/lang/Object;I)Z
java/util/concurrent/atomic/AtomicStampedReference.casPair(Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;Ljava/util/concurrent/atomic/AtomicStampedReference$Pair;)Z
java/util/concurrent/atomic/AtomicStampedReference.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;II)Z
java/util/concurrent/atomic/AtomicStampedReference.get([I)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicStampedReference.getReference()Ljava/lang/Object;
java/util/concurrent/atomic/AtomicStampedReference.getStamp()I
java/util/concurrent/atomic/AtomicStampedReference.objectFieldOffset(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J
java/util/concurrent/atomic/AtomicStampedReference.set(Ljava/lang/Object;I)V
java/util/concurrent/atomic/AtomicStampedReference.weakCompareAndSet(Ljava/lang/Object;Ljava/lang/Object;II)Z

java/util/concurrent/atomic/AtomicReferenceFieldUpdater.accumulateAndGet(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndAccumulate(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndUpdate(Ljava/lang/Object;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet(Ljava/lang/Object;Ljava/lang/Object;)V
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set(Ljava/lang/Object;Ljava/lang/Object;)V
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.updateAndGet(Ljava/lang/Object;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceFieldUpdater.weakCompareAndSet(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z

java/util/concurrent/atomic/AtomicReferenceArray.accumulateAndGet(ILjava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.byteOffset(I)J
java/util/concurrent/atomic/AtomicReferenceArray.checkedByteOffset(I)J
java/util/concurrent/atomic/AtomicReferenceArray.compareAndSet(ILjava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/atomic/AtomicReferenceArray.compareAndSetRaw(JLjava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/atomic/AtomicReferenceArray.get(I)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.getAndAccumulate(ILjava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.getAndSet(ILjava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.getAndUpdate(ILjava/util/function/UnaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.getRaw(J)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.lazySet(ILjava/lang/Object;)V
java/util/concurrent/atomic/AtomicReferenceArray.length()I
java/util/concurrent/atomic/AtomicReferenceArray.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/atomic/AtomicReferenceArray.set(ILjava/lang/Object;)V
java/util/concurrent/atomic/AtomicReferenceArray.updateAndGet(ILjava/util/function/UnaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReferenceArray.weakCompareAndSet(ILjava/lang/Object;Ljava/lang/Object;)Z

java/util/concurrent/atomic/AtomicReference.accumulateAndGet(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReference.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/atomic/AtomicReference.get()Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReference.getAndAccumulate(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReference.getAndSet(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReference.getAndUpdate(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReference.lazySet(Ljava/lang/Object;)V
java/util/concurrent/atomic/AtomicReference.set(Ljava/lang/Object;)V
java/util/concurrent/atomic/AtomicReference.updateAndGet(Ljava/util/function/UnaryOperator;)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicReference.weakCompareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z

java/util/concurrent/atomic/AtomicMarkableReference.attemptMark(Ljava/lang/Object;Z)Z
java/util/concurrent/atomic/AtomicMarkableReference.casPair(Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;Ljava/util/concurrent/atomic/AtomicMarkableReference$Pair;)Z
java/util/concurrent/atomic/AtomicMarkableReference.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z
java/util/concurrent/atomic/AtomicMarkableReference.get([Z)Ljava/lang/Object;
java/util/concurrent/atomic/AtomicMarkableReference.getReference()Ljava/lang/Object;
java/util/concurrent/atomic/AtomicMarkableReference.isMarked()Z
java/util/concurrent/atomic/AtomicMarkableReference.objectFieldOffset(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J
java/util/concurrent/atomic/AtomicMarkableReference.set(Ljava/lang/Object;Z)V
java/util/concurrent/atomic/AtomicMarkableReference.weakCompareAndSet(Ljava/lang/Object;Ljava/lang/Object;ZZ)Z

java/util/concurrent/atomic/AtomicLongFieldUpdater.access$000(Ljava/lang/Class;Ljava/lang/Class;)Z
java/util/concurrent/atomic/AtomicLongFieldUpdater.accumulateAndGet(Ljava/lang/Object;JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet(Ljava/lang/Object;J)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet(Ljava/lang/Object;JJ)Z
java/util/concurrent/atomic/AtomicLongFieldUpdater.decrementAndGet(Ljava/lang/Object;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.get(Ljava/lang/Object;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndAccumulate(Ljava/lang/Object;JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndAdd(Ljava/lang/Object;J)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndDecrement(Ljava/lang/Object;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndIncrement(Ljava/lang/Object;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet(Ljava/lang/Object;J)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndUpdate(Ljava/lang/Object;Ljava/util/function/LongUnaryOperator;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.getPackageName(Ljava/lang/Class;)Ljava/lang/String;
java/util/concurrent/atomic/AtomicLongFieldUpdater.incrementAndGet(Ljava/lang/Object;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.isAncestor(Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;)Z
java/util/concurrent/atomic/AtomicLongFieldUpdater.isSamePackage(Ljava/lang/Class;Ljava/lang/Class;)Z
java/util/concurrent/atomic/AtomicLongFieldUpdater.lazySet(Ljava/lang/Object;J)V
java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
java/util/concurrent/atomic/AtomicLongFieldUpdater.set(Ljava/lang/Object;J)V
java/util/concurrent/atomic/AtomicLongFieldUpdater.updateAndGet(Ljava/lang/Object;Ljava/util/function/LongUnaryOperator;)J
java/util/concurrent/atomic/AtomicLongFieldUpdater.weakCompareAndSet(Ljava/lang/Object;JJ)Z

java/util/concurrent/atomic/AtomicLongArray.accumulateAndGet(IJLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/atomic/AtomicLongArray.addAndGet(IJ)J
java/util/concurrent/atomic/AtomicLongArray.byteOffset(I)J
java/util/concurrent/atomic/AtomicLongArray.checkedByteOffset(I)J
java/util/concurrent/atomic/AtomicLongArray.compareAndSet(IJJ)Z
java/util/concurrent/atomic/AtomicLongArray.compareAndSetRaw(JJJ)Z
java/util/concurrent/atomic/AtomicLongArray.decrementAndGet(I)J
java/util/concurrent/atomic/AtomicLongArray.get(I)J
java/util/concurrent/atomic/AtomicLongArray.getAndAccumulate(IJLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/atomic/AtomicLongArray.getAndAdd(IJ)J
java/util/concurrent/atomic/AtomicLongArray.getAndDecrement(I)J
java/util/concurrent/atomic/AtomicLongArray.getAndIncrement(I)J
java/util/concurrent/atomic/AtomicLongArray.getAndSet(IJ)J
java/util/concurrent/atomic/AtomicLongArray.getAndUpdate(ILjava/util/function/LongUnaryOperator;)J
java/util/concurrent/atomic/AtomicLongArray.getRaw(J)J
java/util/concurrent/atomic/AtomicLongArray.incrementAndGet(I)J
java/util/concurrent/atomic/AtomicLongArray.lazySet(IJ)V
java/util/concurrent/atomic/AtomicLongArray.length()I
java/util/concurrent/atomic/AtomicLongArray.set(IJ)V
java/util/concurrent/atomic/AtomicLongArray.updateAndGet(ILjava/util/function/LongUnaryOperator;)J
java/util/concurrent/atomic/AtomicLongArray.weakCompareAndSet(IJJ)Z

java/util/concurrent/atomic/AtomicLong.accumulateAndGet(JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/atomic/AtomicLong.addAndGet(J)J
java/util/concurrent/atomic/AtomicLong.compareAndSet(JJ)Z
java/util/concurrent/atomic/AtomicLong.decrementAndGet()J
java/util/concurrent/atomic/AtomicLong.doubleValue()D
java/util/concurrent/atomic/AtomicLong.floatValue()F
java/util/concurrent/atomic/AtomicLong.get()J
java/util/concurrent/atomic/AtomicLong.getAndAccumulate(JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/atomic/AtomicLong.getAndAdd(J)J
java/util/concurrent/atomic/AtomicLong.getAndDecrement()J
java/util/concurrent/atomic/AtomicLong.getAndIncrement()J
java/util/concurrent/atomic/AtomicLong.getAndSet(J)J
java/util/concurrent/atomic/AtomicLong.getAndUpdate(Ljava/util/function/LongUnaryOperator;)J
java/util/concurrent/atomic/AtomicLong.incrementAndGet()J
java/util/concurrent/atomic/AtomicLong.intValue()I
java/util/concurrent/atomic/AtomicLong.lazySet(J)V
java/util/concurrent/atomic/AtomicLong.longValue()J
java/util/concurrent/atomic/AtomicLong.set(J)V
java/util/concurrent/atomic/AtomicLong.updateAndGet(Ljava/util/function/LongUnaryOperator;)J
java/util/concurrent/atomic/AtomicLong.weakCompareAndSet(JJ)Z

java/util/concurrent/atomic/AtomicIntegerFieldUpdater.accumulateAndGet(Ljava/lang/Object;ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet(Ljava/lang/Object;I)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet(Ljava/lang/Object;II)Z
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet(Ljava/lang/Object;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get(Ljava/lang/Object;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndAccumulate(Ljava/lang/Object;ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndAdd(Ljava/lang/Object;I)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndDecrement(Ljava/lang/Object;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement(Ljava/lang/Object;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet(Ljava/lang/Object;I)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndUpdate(Ljava/lang/Object;Ljava/util/function/IntUnaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet(Ljava/lang/Object;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet(Ljava/lang/Object;I)V
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set(Ljava/lang/Object;I)V
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.updateAndGet(Ljava/lang/Object;Ljava/util/function/IntUnaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerFieldUpdater.weakCompareAndSet(Ljava/lang/Object;II)Z

java/util/concurrent/atomic/AtomicIntegerArray.accumulateAndGet(IILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerArray.addAndGet(II)I
java/util/concurrent/atomic/AtomicIntegerArray.byteOffset(I)J
java/util/concurrent/atomic/AtomicIntegerArray.checkedByteOffset(I)J
java/util/concurrent/atomic/AtomicIntegerArray.compareAndSet(III)Z
java/util/concurrent/atomic/AtomicIntegerArray.compareAndSetRaw(JII)Z
java/util/concurrent/atomic/AtomicIntegerArray.decrementAndGet(I)I
java/util/concurrent/atomic/AtomicIntegerArray.get(I)I
java/util/concurrent/atomic/AtomicIntegerArray.getAndAccumulate(IILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerArray.getAndAdd(II)I
java/util/concurrent/atomic/AtomicIntegerArray.getAndDecrement(I)I
java/util/concurrent/atomic/AtomicIntegerArray.getAndIncrement(I)I
java/util/concurrent/atomic/AtomicIntegerArray.getAndSet(II)I
java/util/concurrent/atomic/AtomicIntegerArray.getAndUpdate(ILjava/util/function/IntUnaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerArray.getRaw(J)I
java/util/concurrent/atomic/AtomicIntegerArray.incrementAndGet(I)I
java/util/concurrent/atomic/AtomicIntegerArray.lazySet(II)V
java/util/concurrent/atomic/AtomicIntegerArray.length()I
java/util/concurrent/atomic/AtomicIntegerArray.set(II)V
java/util/concurrent/atomic/AtomicIntegerArray.updateAndGet(ILjava/util/function/IntUnaryOperator;)I
java/util/concurrent/atomic/AtomicIntegerArray.weakCompareAndSet(III)Z

java/util/concurrent/atomic/AtomicBoolean.compareAndSet(ZZ)Z
java/util/concurrent/atomic/AtomicBoolean.get()Z
java/util/concurrent/atomic/AtomicBoolean.getAndSet(Z)Z
java/util/concurrent/atomic/AtomicBoolean.lazySet(Z)V
java/util/concurrent/atomic/AtomicBoolean.set(Z)V
java/util/concurrent/atomic/AtomicBoolean.weakCompareAndSet(ZZ)Z


java/util/concurrent/CopyOnWriteArrayList.add(ILjava/lang/Object;)V
java/util/concurrent/CopyOnWriteArrayList.add(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.addAll(ILjava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.addAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.addAllAbsent(Ljava/util/Collection;)I
java/util/concurrent/CopyOnWriteArrayList.addIfAbsent(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.addIfAbsent(Ljava/lang/Object;[Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.clear()V
java/util/concurrent/CopyOnWriteArrayList.clone()Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.contains(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.containsAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.equals(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.forEach(Ljava/util/function/Consumer;)V
java/util/concurrent/CopyOnWriteArrayList.get(I)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.get([Ljava/lang/Object;I)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.getArray()[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.indexOf(Ljava/lang/Object;)I
java/util/concurrent/CopyOnWriteArrayList.indexOf(Ljava/lang/Object;I)I
java/util/concurrent/CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I
java/util/concurrent/CopyOnWriteArrayList.isEmpty()Z
java/util/concurrent/CopyOnWriteArrayList.iterator()Ljava/util/Iterator;
java/util/concurrent/CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;)I
java/util/concurrent/CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;I)I
java/util/concurrent/CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I
java/util/concurrent/CopyOnWriteArrayList.listIterator()Ljava/util/ListIterator;
java/util/concurrent/CopyOnWriteArrayList.listIterator(I)Ljava/util/ListIterator;
java/util/concurrent/CopyOnWriteArrayList.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/CopyOnWriteArrayList.remove(I)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.remove(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.remove(Ljava/lang/Object;[Ljava/lang/Object;I)Z
java/util/concurrent/CopyOnWriteArrayList.removeAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.removeIf(Ljava/util/function/Predicate;)Z
java/util/concurrent/CopyOnWriteArrayList.removeRange(II)V
java/util/concurrent/CopyOnWriteArrayList.replaceAll(Ljava/util/function/UnaryOperator;)V
java/util/concurrent/CopyOnWriteArrayList.resetLock()V
java/util/concurrent/CopyOnWriteArrayList.retainAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.setArray([Ljava/lang/Object;)V
java/util/concurrent/CopyOnWriteArrayList.size()I
java/util/concurrent/CopyOnWriteArrayList.sort(Ljava/util/Comparator;)V
java/util/concurrent/CopyOnWriteArrayList.spliterator()Ljava/util/Spliterator;
java/util/concurrent/CopyOnWriteArrayList.subList(II)Ljava/util/List;
java/util/concurrent/CopyOnWriteArrayList.toArray()[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;

java/util/concurrent/CopyOnWriteArrayList.writeObject(Ljava/io/ObjectOutputStream;)V




java/lang/Thread.activeCount()I
java/lang/Thread.auditSubclass(Ljava/lang/Class;)Z
java/lang/Thread.blockedOn(Lsun/nio/ch/Interruptible;)V
java/lang/Thread.checkAccess()V
java/lang/Thread.countStackFrames()I
java/lang/Thread.currentThread()Ljava/lang/Thread;
java/lang/Thread.destroy()V
java/lang/Thread.dispatchUncaughtException(Ljava/lang/Throwable;)V
java/lang/Thread.dumpStack()V
java/lang/Thread.dumpThreads([Ljava/lang/Thread;)[[Ljava/lang/StackTraceElement;
java/lang/Thread.enumerate([Ljava/lang/Thread;)I
java/lang/Thread.exit()V
java/lang/Thread.getAllStackTraces()Ljava/util/Map;
java/lang/Thread.getContextClassLoader()Ljava/lang/ClassLoader;
java/lang/Thread.getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
java/lang/Thread.getId()J
java/lang/Thread.getName()Ljava/lang/String;
java/lang/Thread.getPriority()I
# java/lang/Thread.getStackTrace()[Ljava/lang/StackTraceElement;
java/lang/Thread.getState()Ljava/lang/Thread$State;
java/lang/Thread.getThreadGroup()Ljava/lang/ThreadGroup;
java/lang/Thread.getThreads()[Ljava/lang/Thread;
java/lang/Thread.getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
java/lang/Thread.holdsLock(Ljava/lang/Object;)Z
java/lang/Thread.interrupt()V
java/lang/Thread.interrupt0()V
java/lang/Thread.interrupted()Z
java/lang/Thread.isAlive()Z
java/lang/Thread.isCCLOverridden(Ljava/lang/Class;)Z
java/lang/Thread.isDaemon()Z
java/lang/Thread.isInterrupted()Z
java/lang/Thread.isInterrupted(Z)Z
java/lang/Thread.join()V
java/lang/Thread.join(J)V
java/lang/Thread.join(JI)V
java/lang/Thread.nextThreadID()J
java/lang/Thread.nextThreadNum()I
java/lang/Thread.processQueue(Ljava/lang/ref/ReferenceQueue;Ljava/util/concurrent/ConcurrentMap;)V
java/lang/Thread.registerNatives()V
java/lang/Thread.resume()V
java/lang/Thread.resume0()V
java/lang/Thread.run()V
java/lang/Thread.setContextClassLoader(Ljava/lang/ClassLoader;)V
java/lang/Thread.setDaemon(Z)V
java/lang/Thread.setDefaultUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V
java/lang/Thread.setName(Ljava/lang/String;)V
java/lang/Thread.setNativeName(Ljava/lang/String;)V
java/lang/Thread.setPriority(I)V
java/lang/Thread.setPriority0(I)V
java/lang/Thread.setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V
java/lang/Thread.sleep(J)V
java/lang/Thread.sleep(JI)V
java/lang/Thread.start()V
java/lang/Thread.start0()V
java/lang/Thread.stop()V
java/lang/Thread.stop(Ljava/lang/Throwable;)V
java/lang/Thread.stop0(Ljava/lang/Object;)V
java/lang/Thread.suspend()V
java/lang/Thread.suspend0()V
java/lang/Thread.yield()V

java/util/concurrent/TimeUnit.sleep(J)V
java/util/concurrent/TimeUnit.timedJoin(Ljava/lang/Thread;J)V
java/util/concurrent/TimeUnit.timedWait(Ljava/lang/Object;J)V


java/util/concurrent/TransferQueue.tryTransfer(Ljava/lang/Object;)Z
java/util/concurrent/TransferQueue.transfer(Ljava/lang/Object;)V
java/util/concurrent/TransferQueue.tryTransfer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/TransferQueue.hasWaitingConsumer()Z
java/util/concurrent/TransferQueue.getWaitingConsumerCount()I
java/util/concurrent/ScheduledExecutorService.schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledExecutorService.schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/RunnableScheduledFuture.isPeriodic()Z
java/util/concurrent/RunnableFuture.run()V
java/util/concurrent/RejectedExecutionHandler.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V
java/util/concurrent/Future.cancel(Z)Z
java/util/concurrent/Future.isCancelled()Z
java/util/concurrent/Future.isDone()Z
java/util/concurrent/Future.get()Ljava/lang/Object;
java/util/concurrent/Future.get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/ForkJoinPool$ManagedBlocker.block()Z
java/util/concurrent/ForkJoinPool$ManagedBlocker.isReleasable()Z
java/util/concurrent/ExecutorService.shutdown()V
java/util/concurrent/ExecutorService.shutdownNow()Ljava/util/List;
java/util/concurrent/ExecutorService.isShutdown()Z
java/util/concurrent/ExecutorService.isTerminated()Z
java/util/concurrent/ExecutorService.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ExecutorService.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorService.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorService.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorService.invokeAll(Ljava/util/Collection;)Ljava/util/List;
java/util/concurrent/ExecutorService.invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
java/util/concurrent/ExecutorService.invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
java/util/concurrent/ExecutorService.invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/Executor.execute(Ljava/lang/Runnable;)V
java/util/concurrent/Delayed.getDelay(Ljava/util/concurrent/TimeUnit;)J
java/util/concurrent/ConcurrentNavigableMap.subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.headMap(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.tailMap(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.headMap(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.tailMap(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.descendingMap()Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentNavigableMap.navigableKeySet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentNavigableMap.keySet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentNavigableMap.descendingKeySet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentNavigableMap.keySet()Ljava/util/Set;
java/util/concurrent/ConcurrentNavigableMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
java/util/concurrent/ConcurrentNavigableMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
java/util/concurrent/ConcurrentNavigableMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
java/util/concurrent/ConcurrentNavigableMap.tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentNavigableMap.headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentNavigableMap.subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentNavigableMap.descendingMap()Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentMap.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.forEach(Ljava/util/function/BiConsumer;)V
java/util/concurrent/ConcurrentMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.remove(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentMap.replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.replaceAll(Ljava/util/function/BiFunction;)V
java/util/concurrent/ConcurrentMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentMap.lambda$replaceAll$0(Ljava/util/function/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)V
java/util/concurrent/CompletionService.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/CompletionService.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/CompletionService.take()Ljava/util/concurrent/Future;
java/util/concurrent/CompletionService.poll()Ljava/util/concurrent/Future;
java/util/concurrent/CompletionService.poll(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
java/util/concurrent/Callable.call()Ljava/lang/Object;
java/util/concurrent/BlockingQueue.add(Ljava/lang/Object;)Z
java/util/concurrent/BlockingQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/BlockingQueue.put(Ljava/lang/Object;)V
java/util/concurrent/BlockingQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/BlockingQueue.take()Ljava/lang/Object;
java/util/concurrent/BlockingQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/BlockingQueue.remainingCapacity()I
java/util/concurrent/BlockingQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/BlockingQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/BlockingQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/BlockingQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/BlockingDeque.addFirst(Ljava/lang/Object;)V
java/util/concurrent/BlockingDeque.addLast(Ljava/lang/Object;)V
java/util/concurrent/BlockingDeque.offerFirst(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.offerLast(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.putFirst(Ljava/lang/Object;)V
java/util/concurrent/BlockingDeque.putLast(Ljava/lang/Object;)V
java/util/concurrent/BlockingDeque.offerFirst(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/BlockingDeque.offerLast(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/BlockingDeque.takeFirst()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.takeLast()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.pollFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/BlockingDeque.pollLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/BlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.removeLastOccurrence(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.add(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.offer(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.put(Ljava/lang/Object;)V
java/util/concurrent/BlockingDeque.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/BlockingDeque.remove()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.poll()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.take()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/BlockingDeque.element()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.peek()Ljava/lang/Object;
java/util/concurrent/BlockingDeque.remove(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.contains(Ljava/lang/Object;)Z
java/util/concurrent/BlockingDeque.size()I
java/util/concurrent/BlockingDeque.iterator()Ljava/util/Iterator;
java/util/concurrent/BlockingDeque.push(Ljava/lang/Object;)V


java/util/concurrent/ThreadPoolExecutor$DiscardPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V

java/util/concurrent/ThreadPoolExecutor$DiscardOldestPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V

java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V

java/util/concurrent/ThreadPoolExecutor$AbortPolicy.rejectedExecution(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V
java/util/concurrent/ThreadPoolExecutor.runStateOf(I)I
java/util/concurrent/ThreadPoolExecutor.workerCountOf(I)I
java/util/concurrent/ThreadPoolExecutor.ctlOf(II)I
java/util/concurrent/ThreadPoolExecutor.runStateLessThan(II)Z
java/util/concurrent/ThreadPoolExecutor.runStateAtLeast(II)Z
java/util/concurrent/ThreadPoolExecutor.isRunning(I)Z
java/util/concurrent/ThreadPoolExecutor.compareAndIncrementWorkerCount(I)Z
java/util/concurrent/ThreadPoolExecutor.compareAndDecrementWorkerCount(I)Z
java/util/concurrent/ThreadPoolExecutor.decrementWorkerCount()V
java/util/concurrent/ThreadPoolExecutor.advanceRunState(I)V
java/util/concurrent/ThreadPoolExecutor.tryTerminate()V
java/util/concurrent/ThreadPoolExecutor.checkShutdownAccess()V
java/util/concurrent/ThreadPoolExecutor.interruptWorkers()V
java/util/concurrent/ThreadPoolExecutor.interruptIdleWorkers(Z)V
java/util/concurrent/ThreadPoolExecutor.interruptIdleWorkers()V
java/util/concurrent/ThreadPoolExecutor.reject(Ljava/lang/Runnable;)V
java/util/concurrent/ThreadPoolExecutor.onShutdown()V
java/util/concurrent/ThreadPoolExecutor.isRunningOrShutdown(Z)Z
java/util/concurrent/ThreadPoolExecutor.drainQueue()Ljava/util/List;
java/util/concurrent/ThreadPoolExecutor.addWorker(Ljava/lang/Runnable;Z)Z
java/util/concurrent/ThreadPoolExecutor.addWorkerFailed(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V
java/util/concurrent/ThreadPoolExecutor.processWorkerExit(Ljava/util/concurrent/ThreadPoolExecutor$Worker;Z)V
java/util/concurrent/ThreadPoolExecutor.getTask()Ljava/lang/Runnable;
java/util/concurrent/ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V




java/util/concurrent/ThreadPoolExecutor.execute(Ljava/lang/Runnable;)V
java/util/concurrent/ThreadPoolExecutor.shutdown()V
java/util/concurrent/ThreadPoolExecutor.shutdownNow()Ljava/util/List;
java/util/concurrent/ThreadPoolExecutor.isShutdown()Z
java/util/concurrent/ThreadPoolExecutor.isTerminating()Z
java/util/concurrent/ThreadPoolExecutor.isTerminated()Z
java/util/concurrent/ThreadPoolExecutor.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ThreadPoolExecutor.finalize()V
java/util/concurrent/ThreadPoolExecutor.setThreadFactory(Ljava/util/concurrent/ThreadFactory;)V
java/util/concurrent/ThreadPoolExecutor.getThreadFactory()Ljava/util/concurrent/ThreadFactory;
java/util/concurrent/ThreadPoolExecutor.setRejectedExecutionHandler(Ljava/util/concurrent/RejectedExecutionHandler;)V
java/util/concurrent/ThreadPoolExecutor.getRejectedExecutionHandler()Ljava/util/concurrent/RejectedExecutionHandler;
java/util/concurrent/ThreadPoolExecutor.setCorePoolSize(I)V
java/util/concurrent/ThreadPoolExecutor.getCorePoolSize()I
java/util/concurrent/ThreadPoolExecutor.prestartCoreThread()Z
java/util/concurrent/ThreadPoolExecutor.ensurePrestart()V
java/util/concurrent/ThreadPoolExecutor.prestartAllCoreThreads()I
java/util/concurrent/ThreadPoolExecutor.allowsCoreThreadTimeOut()Z
java/util/concurrent/ThreadPoolExecutor.allowCoreThreadTimeOut(Z)V
java/util/concurrent/ThreadPoolExecutor.setMaximumPoolSize(I)V
java/util/concurrent/ThreadPoolExecutor.getMaximumPoolSize()I
java/util/concurrent/ThreadPoolExecutor.setKeepAliveTime(JLjava/util/concurrent/TimeUnit;)V
java/util/concurrent/ThreadPoolExecutor.getKeepAliveTime(Ljava/util/concurrent/TimeUnit;)J
java/util/concurrent/ThreadPoolExecutor.getQueue()Ljava/util/concurrent/BlockingQueue;
java/util/concurrent/ThreadPoolExecutor.remove(Ljava/lang/Runnable;)Z
java/util/concurrent/ThreadPoolExecutor.purge()V
java/util/concurrent/ThreadPoolExecutor.getPoolSize()I
java/util/concurrent/ThreadPoolExecutor.getActiveCount()I
java/util/concurrent/ThreadPoolExecutor.getLargestPoolSize()I
java/util/concurrent/ThreadPoolExecutor.getTaskCount()J
java/util/concurrent/ThreadPoolExecutor.getCompletedTaskCount()J
java/util/concurrent/ThreadPoolExecutor.toString()Ljava/lang/String;
java/util/concurrent/ThreadPoolExecutor.beforeExecute(Ljava/lang/Thread;Ljava/lang/Runnable;)V
java/util/concurrent/ThreadPoolExecutor.afterExecute(Ljava/lang/Runnable;Ljava/lang/Throwable;)V
java/util/concurrent/ThreadPoolExecutor.terminated()V
java/util/concurrent/ThreadPoolExecutor.lambda$finalize$0()Ljava/lang/Void;

java/util/concurrent/ThreadLocalRandom.initialSeed()J
java/util/concurrent/ThreadLocalRandom.mix64(J)J
java/util/concurrent/ThreadLocalRandom.mix32(J)I

java/util/concurrent/ThreadLocalRandom.localInit()V
java/util/concurrent/ThreadLocalRandom.current()Ljava/util/concurrent/ThreadLocalRandom;
java/util/concurrent/ThreadLocalRandom.setSeed(J)V
java/util/concurrent/ThreadLocalRandom.nextSeed()J
java/util/concurrent/ThreadLocalRandom.next(I)I
java/util/concurrent/ThreadLocalRandom.internalNextLong(JJ)J
java/util/concurrent/ThreadLocalRandom.internalNextInt(II)I
java/util/concurrent/ThreadLocalRandom.internalNextDouble(DD)D
java/util/concurrent/ThreadLocalRandom.nextInt()I
java/util/concurrent/ThreadLocalRandom.nextInt(I)I
java/util/concurrent/ThreadLocalRandom.nextInt(II)I
java/util/concurrent/ThreadLocalRandom.nextLong()J
java/util/concurrent/ThreadLocalRandom.nextLong(J)J
java/util/concurrent/ThreadLocalRandom.nextLong(JJ)J
java/util/concurrent/ThreadLocalRandom.nextDouble()D
java/util/concurrent/ThreadLocalRandom.nextDouble(D)D
java/util/concurrent/ThreadLocalRandom.nextDouble(DD)D
java/util/concurrent/ThreadLocalRandom.nextBoolean()Z
java/util/concurrent/ThreadLocalRandom.nextFloat()F
java/util/concurrent/ThreadLocalRandom.nextGaussian()D
java/util/concurrent/ThreadLocalRandom.ints(J)Ljava/util/stream/IntStream;
java/util/concurrent/ThreadLocalRandom.ints()Ljava/util/stream/IntStream;
java/util/concurrent/ThreadLocalRandom.ints(JII)Ljava/util/stream/IntStream;
java/util/concurrent/ThreadLocalRandom.ints(II)Ljava/util/stream/IntStream;
java/util/concurrent/ThreadLocalRandom.longs(J)Ljava/util/stream/LongStream;
java/util/concurrent/ThreadLocalRandom.longs()Ljava/util/stream/LongStream;
java/util/concurrent/ThreadLocalRandom.longs(JJJ)Ljava/util/stream/LongStream;
java/util/concurrent/ThreadLocalRandom.longs(JJ)Ljava/util/stream/LongStream;
java/util/concurrent/ThreadLocalRandom.doubles(J)Ljava/util/stream/DoubleStream;
java/util/concurrent/ThreadLocalRandom.doubles()Ljava/util/stream/DoubleStream;
java/util/concurrent/ThreadLocalRandom.doubles(JDD)Ljava/util/stream/DoubleStream;
java/util/concurrent/ThreadLocalRandom.doubles(DD)Ljava/util/stream/DoubleStream;
java/util/concurrent/ThreadLocalRandom.getProbe()I
java/util/concurrent/ThreadLocalRandom.advanceProbe(I)I
java/util/concurrent/ThreadLocalRandom.nextSecondarySeed()I
java/util/concurrent/ThreadLocalRandom.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/ThreadLocalRandom.readResolve()Ljava/lang/Object;



java/util/concurrent/SynchronousQueue.put(Ljava/lang/Object;)V
java/util/concurrent/SynchronousQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/SynchronousQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/SynchronousQueue.take()Ljava/lang/Object;
java/util/concurrent/SynchronousQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/SynchronousQueue.poll()Ljava/lang/Object;
java/util/concurrent/SynchronousQueue.isEmpty()Z
java/util/concurrent/SynchronousQueue.size()I
java/util/concurrent/SynchronousQueue.remainingCapacity()I
java/util/concurrent/SynchronousQueue.clear()V
java/util/concurrent/SynchronousQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/SynchronousQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/SynchronousQueue.containsAll(Ljava/util/Collection;)Z
java/util/concurrent/SynchronousQueue.removeAll(Ljava/util/Collection;)Z
java/util/concurrent/SynchronousQueue.retainAll(Ljava/util/Collection;)Z
java/util/concurrent/SynchronousQueue.peek()Ljava/lang/Object;
java/util/concurrent/SynchronousQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/SynchronousQueue.spliterator()Ljava/util/Spliterator;
java/util/concurrent/SynchronousQueue.toArray()[Ljava/lang/Object;
java/util/concurrent/SynchronousQueue.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/SynchronousQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/SynchronousQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/SynchronousQueue.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/SynchronousQueue.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/SynchronousQueue.objectFieldOffset(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class;)J



java/util/concurrent/Semaphore.acquire()V
java/util/concurrent/Semaphore.acquireUninterruptibly()V
java/util/concurrent/Semaphore.tryAcquire()Z
java/util/concurrent/Semaphore.tryAcquire(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.release()V
java/util/concurrent/Semaphore.acquire(I)V
java/util/concurrent/Semaphore.acquireUninterruptibly(I)V
java/util/concurrent/Semaphore.tryAcquire(I)Z
java/util/concurrent/Semaphore.tryAcquire(IJLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/Semaphore.release(I)V
java/util/concurrent/Semaphore.availablePermits()I
java/util/concurrent/Semaphore.drainPermits()I
java/util/concurrent/Semaphore.reducePermits(I)V
java/util/concurrent/Semaphore.isFair()Z
java/util/concurrent/Semaphore.hasQueuedThreads()Z
java/util/concurrent/Semaphore.getQueueLength()I
java/util/concurrent/Semaphore.getQueuedThreads()Ljava/util/Collection;
java/util/concurrent/Semaphore.toString()Ljava/lang/String;
java/util/concurrent/ScheduledThreadPoolExecutor.now()J
java/util/concurrent/ScheduledThreadPoolExecutor.canRunInCurrentRunState(Z)Z
java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute(Ljava/util/concurrent/RunnableScheduledFuture;)V
java/util/concurrent/ScheduledThreadPoolExecutor.reExecutePeriodic(Ljava/util/concurrent/RunnableScheduledFuture;)V
java/util/concurrent/ScheduledThreadPoolExecutor.onShutdown()V
java/util/concurrent/ScheduledThreadPoolExecutor.decorateTask(Ljava/lang/Runnable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;
java/util/concurrent/ScheduledThreadPoolExecutor.decorateTask(Ljava/util/concurrent/Callable;Ljava/util/concurrent/RunnableScheduledFuture;)Ljava/util/concurrent/RunnableScheduledFuture;




java/util/concurrent/ScheduledThreadPoolExecutor.triggerTime(JLjava/util/concurrent/TimeUnit;)J
java/util/concurrent/ScheduledThreadPoolExecutor.triggerTime(J)J
java/util/concurrent/ScheduledThreadPoolExecutor.overflowFree(J)J
java/util/concurrent/ScheduledThreadPoolExecutor.schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledThreadPoolExecutor.schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledThreadPoolExecutor.scheduleWithFixedDelay(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
java/util/concurrent/ScheduledThreadPoolExecutor.execute(Ljava/lang/Runnable;)V
java/util/concurrent/ScheduledThreadPoolExecutor.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
java/util/concurrent/ScheduledThreadPoolExecutor.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/ScheduledThreadPoolExecutor.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(Z)V
java/util/concurrent/ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy()Z
java/util/concurrent/ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(Z)V
java/util/concurrent/ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy()Z
java/util/concurrent/ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(Z)V
java/util/concurrent/ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy()Z
java/util/concurrent/ScheduledThreadPoolExecutor.shutdown()V
java/util/concurrent/ScheduledThreadPoolExecutor.shutdownNow()Ljava/util/List;
java/util/concurrent/ScheduledThreadPoolExecutor.getQueue()Ljava/util/concurrent/BlockingQueue;
java/util/concurrent/ScheduledThreadPoolExecutor.access$000()Ljava/util/concurrent/atomic/AtomicLong;
java/util/concurrent/ScheduledThreadPoolExecutor.access$100(Ljava/util/concurrent/ScheduledThreadPoolExecutor;)Z


java/util/concurrent/RecursiveTask.compute()Ljava/lang/Object;
java/util/concurrent/RecursiveTask.getRawResult()Ljava/lang/Object;
java/util/concurrent/RecursiveTask.setRawResult(Ljava/lang/Object;)V
java/util/concurrent/RecursiveTask.exec()Z

java/util/concurrent/RecursiveAction.compute()V
java/util/concurrent/RecursiveAction.getRawResult()Ljava/lang/Void;
java/util/concurrent/RecursiveAction.setRawResult(Ljava/lang/Void;)V
java/util/concurrent/RecursiveAction.exec()Z
java/util/concurrent/RecursiveAction.setRawResult(Ljava/lang/Object;)V
java/util/concurrent/RecursiveAction.getRawResult()Ljava/lang/Object;




java/util/concurrent/PriorityBlockingQueue.tryGrow([Ljava/lang/Object;I)V
java/util/concurrent/PriorityBlockingQueue.dequeue()Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.siftUpComparable(ILjava/lang/Object;[Ljava/lang/Object;)V
java/util/concurrent/PriorityBlockingQueue.siftUpUsingComparator(ILjava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)V
java/util/concurrent/PriorityBlockingQueue.siftDownComparable(ILjava/lang/Object;[Ljava/lang/Object;I)V
java/util/concurrent/PriorityBlockingQueue.siftDownUsingComparator(ILjava/lang/Object;[Ljava/lang/Object;ILjava/util/Comparator;)V
java/util/concurrent/PriorityBlockingQueue.heapify()V
java/util/concurrent/PriorityBlockingQueue.add(Ljava/lang/Object;)Z
java/util/concurrent/PriorityBlockingQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/PriorityBlockingQueue.put(Ljava/lang/Object;)V
java/util/concurrent/PriorityBlockingQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/PriorityBlockingQueue.poll()Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.take()Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.peek()Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.comparator()Ljava/util/Comparator;
java/util/concurrent/PriorityBlockingQueue.size()I
java/util/concurrent/PriorityBlockingQueue.remainingCapacity()I
java/util/concurrent/PriorityBlockingQueue.indexOf(Ljava/lang/Object;)I
java/util/concurrent/PriorityBlockingQueue.removeAt(I)V
java/util/concurrent/PriorityBlockingQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/PriorityBlockingQueue.removeEQ(Ljava/lang/Object;)V
java/util/concurrent/PriorityBlockingQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/PriorityBlockingQueue.toArray()[Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.toString()Ljava/lang/String;
java/util/concurrent/PriorityBlockingQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/PriorityBlockingQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/PriorityBlockingQueue.clear()V
java/util/concurrent/PriorityBlockingQueue.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/PriorityBlockingQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/PriorityBlockingQueue.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/PriorityBlockingQueue.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/PriorityBlockingQueue.spliterator()Ljava/util/Spliterator;

java/util/concurrent/Phaser.unarrivedOf(J)I
java/util/concurrent/Phaser.partiesOf(J)I
java/util/concurrent/Phaser.phaseOf(J)I
java/util/concurrent/Phaser.arrivedOf(J)I
java/util/concurrent/Phaser.queueFor(I)Ljava/util/concurrent/atomic/AtomicReference;
java/util/concurrent/Phaser.badArrive(J)Ljava/lang/String;
java/util/concurrent/Phaser.badRegister(J)Ljava/lang/String;
java/util/concurrent/Phaser.doArrive(I)I
java/util/concurrent/Phaser.doRegister(I)I
java/util/concurrent/Phaser.reconcileState()J




java/util/concurrent/Phaser.register()I
java/util/concurrent/Phaser.bulkRegister(I)I
java/util/concurrent/Phaser.arrive()I
java/util/concurrent/Phaser.arriveAndDeregister()I
java/util/concurrent/Phaser.arriveAndAwaitAdvance()I
java/util/concurrent/Phaser.awaitAdvance(I)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(I)I
java/util/concurrent/Phaser.awaitAdvanceInterruptibly(IJLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/Phaser.forceTermination()V
java/util/concurrent/Phaser.getPhase()I
java/util/concurrent/Phaser.getRegisteredParties()I
java/util/concurrent/Phaser.getArrivedParties()I
java/util/concurrent/Phaser.getUnarrivedParties()I
java/util/concurrent/Phaser.getParent()Ljava/util/concurrent/Phaser;
java/util/concurrent/Phaser.getRoot()Ljava/util/concurrent/Phaser;
java/util/concurrent/Phaser.isTerminated()Z
java/util/concurrent/Phaser.onAdvance(II)Z
java/util/concurrent/Phaser.toString()Ljava/lang/String;
java/util/concurrent/Phaser.stateToString(J)Ljava/lang/String;
java/util/concurrent/Phaser.releaseWaiters(I)V
java/util/concurrent/Phaser.abortWait(I)I
java/util/concurrent/Phaser.internalAwaitAdvance(ILjava/util/concurrent/Phaser$QNode;)I

java/util/concurrent/LinkedTransferQueue.casTail(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z
java/util/concurrent/LinkedTransferQueue.casHead(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)Z
java/util/concurrent/LinkedTransferQueue.casSweepVotes(II)Z
java/util/concurrent/LinkedTransferQueue.cast(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.xfer(Ljava/lang/Object;ZIJ)Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.tryAppend(Ljava/util/concurrent/LinkedTransferQueue$Node;Z)Ljava/util/concurrent/LinkedTransferQueue$Node;
java/util/concurrent/LinkedTransferQueue.awaitMatch(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/lang/Object;ZJ)Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.spinsFor(Ljava/util/concurrent/LinkedTransferQueue$Node;Z)I
java/util/concurrent/LinkedTransferQueue.succ(Ljava/util/concurrent/LinkedTransferQueue$Node;)Ljava/util/concurrent/LinkedTransferQueue$Node;
java/util/concurrent/LinkedTransferQueue.firstOfMode(Z)Ljava/util/concurrent/LinkedTransferQueue$Node;
java/util/concurrent/LinkedTransferQueue.firstDataNode()Ljava/util/concurrent/LinkedTransferQueue$Node;
java/util/concurrent/LinkedTransferQueue.firstDataItem()Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.countOfMode(Z)I
java/util/concurrent/LinkedTransferQueue.spliterator()Ljava/util/Spliterator;
java/util/concurrent/LinkedTransferQueue.unsplice(Ljava/util/concurrent/LinkedTransferQueue$Node;Ljava/util/concurrent/LinkedTransferQueue$Node;)V
java/util/concurrent/LinkedTransferQueue.sweep()V
java/util/concurrent/LinkedTransferQueue.findAndRemove(Ljava/lang/Object;)Z


java/util/concurrent/LinkedTransferQueue.put(Ljava/lang/Object;)V
java/util/concurrent/LinkedTransferQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/LinkedTransferQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/LinkedTransferQueue.add(Ljava/lang/Object;)Z
java/util/concurrent/LinkedTransferQueue.tryTransfer(Ljava/lang/Object;)Z
java/util/concurrent/LinkedTransferQueue.transfer(Ljava/lang/Object;)V
java/util/concurrent/LinkedTransferQueue.tryTransfer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/LinkedTransferQueue.take()Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.poll()Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/LinkedTransferQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/LinkedTransferQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/LinkedTransferQueue.peek()Ljava/lang/Object;
java/util/concurrent/LinkedTransferQueue.isEmpty()Z
java/util/concurrent/LinkedTransferQueue.hasWaitingConsumer()Z
java/util/concurrent/LinkedTransferQueue.size()I
java/util/concurrent/LinkedTransferQueue.getWaitingConsumerCount()I
java/util/concurrent/LinkedTransferQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/LinkedTransferQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/LinkedTransferQueue.remainingCapacity()I
java/util/concurrent/LinkedTransferQueue.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/LinkedTransferQueue.readObject(Ljava/io/ObjectInputStream;)V

java/util/concurrent/LinkedBlockingQueue.signalNotEmpty()V
java/util/concurrent/LinkedBlockingQueue.signalNotFull()V
java/util/concurrent/LinkedBlockingQueue.enqueue(Ljava/util/concurrent/LinkedBlockingQueue$Node;)V
java/util/concurrent/LinkedBlockingQueue.dequeue()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.fullyLock()V
java/util/concurrent/LinkedBlockingQueue.fullyUnlock()V



java/util/concurrent/LinkedBlockingQueue.size()I
java/util/concurrent/LinkedBlockingQueue.remainingCapacity()I
java/util/concurrent/LinkedBlockingQueue.put(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/LinkedBlockingQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingQueue.take()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.poll()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.peek()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.unlink(Ljava/util/concurrent/LinkedBlockingQueue$Node;Ljava/util/concurrent/LinkedBlockingQueue$Node;)V
java/util/concurrent/LinkedBlockingQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingQueue.toArray()[Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/LinkedBlockingQueue.toString()Ljava/lang/String;
java/util/concurrent/LinkedBlockingQueue.clear()V
java/util/concurrent/LinkedBlockingQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/LinkedBlockingQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/LinkedBlockingQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/LinkedBlockingQueue.spliterator()Ljava/util/Spliterator;
java/util/concurrent/LinkedBlockingQueue.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/LinkedBlockingQueue.readObject(Ljava/io/ObjectInputStream;)V



java/util/concurrent/LinkedBlockingDeque.linkFirst(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z
java/util/concurrent/LinkedBlockingDeque.linkLast(Ljava/util/concurrent/LinkedBlockingDeque$Node;)Z
java/util/concurrent/LinkedBlockingDeque.unlinkFirst()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.unlinkLast()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.unlink(Ljava/util/concurrent/LinkedBlockingDeque$Node;)V
java/util/concurrent/LinkedBlockingDeque.addFirst(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingDeque.addLast(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingDeque.offerFirst(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.offerLast(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.putFirst(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingDeque.putLast(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingDeque.offerFirst(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/LinkedBlockingDeque.offerLast(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/LinkedBlockingDeque.removeFirst()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.removeLast()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.pollFirst()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.pollLast()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.takeFirst()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.takeLast()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.pollFirst(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.pollLast(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.getFirst()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.getLast()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.peekFirst()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.peekLast()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.removeFirstOccurrence(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.removeLastOccurrence(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.add(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.offer(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.put(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingDeque.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/LinkedBlockingDeque.remove()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.poll()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.take()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.element()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.peek()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.remainingCapacity()I
java/util/concurrent/LinkedBlockingDeque.drainTo(Ljava/util/Collection;)I
java/util/concurrent/LinkedBlockingDeque.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/LinkedBlockingDeque.push(Ljava/lang/Object;)V
java/util/concurrent/LinkedBlockingDeque.pop()Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.remove(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.size()I
java/util/concurrent/LinkedBlockingDeque.contains(Ljava/lang/Object;)Z
java/util/concurrent/LinkedBlockingDeque.toArray()[Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/LinkedBlockingDeque.toString()Ljava/lang/String;
java/util/concurrent/LinkedBlockingDeque.clear()V
java/util/concurrent/LinkedBlockingDeque.iterator()Ljava/util/Iterator;
java/util/concurrent/LinkedBlockingDeque.descendingIterator()Ljava/util/Iterator;
java/util/concurrent/LinkedBlockingDeque.spliterator()Ljava/util/Spliterator;
java/util/concurrent/LinkedBlockingDeque.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/LinkedBlockingDeque.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/FutureTask.report(I)Ljava/lang/Object;


java/util/concurrent/FutureTask.isCancelled()Z
java/util/concurrent/FutureTask.isDone()Z
java/util/concurrent/FutureTask.cancel(Z)Z
java/util/concurrent/FutureTask.get()Ljava/lang/Object;
java/util/concurrent/FutureTask.get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/FutureTask.done()V
java/util/concurrent/FutureTask.set(Ljava/lang/Object;)V
java/util/concurrent/FutureTask.setException(Ljava/lang/Throwable;)V
java/util/concurrent/FutureTask.run()V
java/util/concurrent/FutureTask.runAndReset()Z
java/util/concurrent/FutureTask.handlePossibleCancellationInterrupt(I)V
java/util/concurrent/FutureTask.finishCompletion()V
java/util/concurrent/FutureTask.awaitDone(ZJ)I
java/util/concurrent/FutureTask.removeWaiter(Ljava/util/concurrent/FutureTask$WaitNode;)V



java/util/concurrent/ForkJoinWorkerThread.getPool()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinWorkerThread.getPoolIndex()I
java/util/concurrent/ForkJoinWorkerThread.onStart()V
java/util/concurrent/ForkJoinWorkerThread.onTermination(Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinWorkerThread.run()V
java/util/concurrent/ForkJoinWorkerThread.eraseThreadLocals()V
java/util/concurrent/ForkJoinWorkerThread.afterTopLevelExec()V

java/util/concurrent/ForkJoinTask.setCompletion(I)I
java/util/concurrent/ForkJoinTask.doExec()I
java/util/concurrent/ForkJoinTask.internalWait(J)V
java/util/concurrent/ForkJoinTask.externalAwaitDone()I
java/util/concurrent/ForkJoinTask.externalInterruptibleAwaitDone()I
java/util/concurrent/ForkJoinTask.doJoin()I
java/util/concurrent/ForkJoinTask.doInvoke()I
java/util/concurrent/ForkJoinTask.recordExceptionalCompletion(Ljava/lang/Throwable;)I
java/util/concurrent/ForkJoinTask.setExceptionalCompletion(Ljava/lang/Throwable;)I
java/util/concurrent/ForkJoinTask.internalPropagateException(Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinTask.cancelIgnoringExceptions(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinTask.clearExceptionalCompletion()V
java/util/concurrent/ForkJoinTask.getThrowableException()Ljava/lang/Throwable;
java/util/concurrent/ForkJoinTask.expungeStaleExceptions()V
java/util/concurrent/ForkJoinTask.helpExpungeStaleExceptions()V
java/util/concurrent/ForkJoinTask.rethrow(Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinTask.uncheckedThrow(Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinTask.reportException(I)V
java/util/concurrent/ForkJoinTask.fork()Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.join()Ljava/lang/Object;
java/util/concurrent/ForkJoinTask.invoke()Ljava/lang/Object;
java/util/concurrent/ForkJoinTask.invokeAll(Ljava/util/concurrent/ForkJoinTask;Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinTask.invokeAll([Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinTask.invokeAll(Ljava/util/Collection;)Ljava/util/Collection;
java/util/concurrent/ForkJoinTask.cancel(Z)Z
java/util/concurrent/ForkJoinTask.isDone()Z
java/util/concurrent/ForkJoinTask.isCancelled()Z
java/util/concurrent/ForkJoinTask.isCompletedAbnormally()Z
java/util/concurrent/ForkJoinTask.isCompletedNormally()Z
java/util/concurrent/ForkJoinTask.getException()Ljava/lang/Throwable;
java/util/concurrent/ForkJoinTask.completeExceptionally(Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinTask.complete(Ljava/lang/Object;)V
java/util/concurrent/ForkJoinTask.quietlyComplete()V
java/util/concurrent/ForkJoinTask.get()Ljava/lang/Object;
java/util/concurrent/ForkJoinTask.get(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/ForkJoinTask.quietlyJoin()V
java/util/concurrent/ForkJoinTask.quietlyInvoke()V
java/util/concurrent/ForkJoinTask.helpQuiesce()V
java/util/concurrent/ForkJoinTask.reinitialize()V
java/util/concurrent/ForkJoinTask.getPool()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinTask.inForkJoinPool()Z
java/util/concurrent/ForkJoinTask.tryUnfork()Z
java/util/concurrent/ForkJoinTask.getQueuedTaskCount()I
java/util/concurrent/ForkJoinTask.getSurplusQueuedTaskCount()I
java/util/concurrent/ForkJoinTask.getRawResult()Ljava/lang/Object;
java/util/concurrent/ForkJoinTask.setRawResult(Ljava/lang/Object;)V
java/util/concurrent/ForkJoinTask.exec()Z
java/util/concurrent/ForkJoinTask.peekNextLocalTask()Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.pollNextLocalTask()Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.pollTask()Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.getForkJoinTaskTag()S
java/util/concurrent/ForkJoinTask.setForkJoinTaskTag(S)S
java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag(SS)Z
java/util/concurrent/ForkJoinTask.adapt(Ljava/lang/Runnable;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.adapt(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.adapt(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinTask.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/ForkJoinTask.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/ForkJoinTask.access$000()Ljava/lang/ref/ReferenceQueue;

java/util/concurrent/ForkJoinPool.checkPermission()V
java/util/concurrent/ForkJoinPool.nextPoolId()I
java/util/concurrent/ForkJoinPool.lockRunState()I
java/util/concurrent/ForkJoinPool.awaitRunStateLock()I
java/util/concurrent/ForkJoinPool.unlockRunState(II)V
java/util/concurrent/ForkJoinPool.createWorker()Z
java/util/concurrent/ForkJoinPool.tryAddWorker(J)V
java/util/concurrent/ForkJoinPool.registerWorker(Ljava/util/concurrent/ForkJoinWorkerThread;)Ljava/util/concurrent/ForkJoinPool$WorkQueue;
java/util/concurrent/ForkJoinPool.deregisterWorker(Ljava/util/concurrent/ForkJoinWorkerThread;Ljava/lang/Throwable;)V
java/util/concurrent/ForkJoinPool.signalWork([Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V
java/util/concurrent/ForkJoinPool.tryRelease(JLjava/util/concurrent/ForkJoinPool$WorkQueue;J)Z
java/util/concurrent/ForkJoinPool.runWorker(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V
java/util/concurrent/ForkJoinPool.scan(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.awaitWork(Ljava/util/concurrent/ForkJoinPool$WorkQueue;I)Z
java/util/concurrent/ForkJoinPool.helpComplete(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/CountedCompleter;I)I
java/util/concurrent/ForkJoinPool.helpStealer(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.tryCompensate(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)Z
java/util/concurrent/ForkJoinPool.awaitJoin(Ljava/util/concurrent/ForkJoinPool$WorkQueue;Ljava/util/concurrent/ForkJoinTask;J)I
java/util/concurrent/ForkJoinPool.findNonEmptyStealQueue()Ljava/util/concurrent/ForkJoinPool$WorkQueue;
java/util/concurrent/ForkJoinPool.helpQuiescePool(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)V
java/util/concurrent/ForkJoinPool.nextTaskFor(Ljava/util/concurrent/ForkJoinPool$WorkQueue;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.getSurplusQueuedTaskCount()I
java/util/concurrent/ForkJoinPool.tryTerminate(ZZ)Z
java/util/concurrent/ForkJoinPool.externalSubmit(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.externalPush(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.commonSubmitterQueue()Ljava/util/concurrent/ForkJoinPool$WorkQueue;
java/util/concurrent/ForkJoinPool.tryExternalUnpush(Ljava/util/concurrent/ForkJoinTask;)Z
java/util/concurrent/ForkJoinPool.externalHelpComplete(Ljava/util/concurrent/CountedCompleter;I)I



java/util/concurrent/ForkJoinPool.checkParallelism(I)I
java/util/concurrent/ForkJoinPool.checkFactory(Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;)Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;

java/util/concurrent/ForkJoinPool.commonPool()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinPool.invoke(Ljava/util/concurrent/ForkJoinTask;)Ljava/lang/Object;
java/util/concurrent/ForkJoinPool.execute(Ljava/util/concurrent/ForkJoinTask;)V
java/util/concurrent/ForkJoinPool.execute(Ljava/lang/Runnable;)V
java/util/concurrent/ForkJoinPool.submit(Ljava/util/concurrent/ForkJoinTask;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.invokeAll(Ljava/util/Collection;)Ljava/util/List;
java/util/concurrent/ForkJoinPool.getFactory()Ljava/util/concurrent/ForkJoinPool$ForkJoinWorkerThreadFactory;
java/util/concurrent/ForkJoinPool.getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;
java/util/concurrent/ForkJoinPool.getParallelism()I
java/util/concurrent/ForkJoinPool.getCommonPoolParallelism()I
java/util/concurrent/ForkJoinPool.getPoolSize()I
java/util/concurrent/ForkJoinPool.getAsyncMode()Z
java/util/concurrent/ForkJoinPool.getRunningThreadCount()I
java/util/concurrent/ForkJoinPool.getActiveThreadCount()I
java/util/concurrent/ForkJoinPool.isQuiescent()Z
java/util/concurrent/ForkJoinPool.getStealCount()J
java/util/concurrent/ForkJoinPool.getQueuedTaskCount()J
java/util/concurrent/ForkJoinPool.getQueuedSubmissionCount()I
java/util/concurrent/ForkJoinPool.hasQueuedSubmissions()Z
java/util/concurrent/ForkJoinPool.pollSubmission()Ljava/util/concurrent/ForkJoinTask;
java/util/concurrent/ForkJoinPool.drainTasksTo(Ljava/util/Collection;)I
java/util/concurrent/ForkJoinPool.toString()Ljava/lang/String;
java/util/concurrent/ForkJoinPool.shutdown()V
java/util/concurrent/ForkJoinPool.shutdownNow()Ljava/util/List;
java/util/concurrent/ForkJoinPool.isTerminated()Z
java/util/concurrent/ForkJoinPool.isTerminating()Z
java/util/concurrent/ForkJoinPool.isShutdown()Z
java/util/concurrent/ForkJoinPool.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ForkJoinPool.awaitQuiescence(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ForkJoinPool.quiesceCommonPool()V
java/util/concurrent/ForkJoinPool.managedBlock(Ljava/util/concurrent/ForkJoinPool$ManagedBlocker;)V
java/util/concurrent/ForkJoinPool.newTaskFor(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/ForkJoinPool.newTaskFor(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/ForkJoinPool.makeCommonPool()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinPool.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/ForkJoinPool.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
java/util/concurrent/ForkJoinPool.access$000()Ljava/util/concurrent/ForkJoinPool;
java/util/concurrent/ForkJoinPool.access$100()Ljava/lang/RuntimePermission;

java/util/concurrent/Executors.newFixedThreadPool(I)Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newWorkStealingPool(I)Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newWorkStealingPool()Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newFixedThreadPool(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newSingleThreadExecutor()Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newSingleThreadExecutor(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newCachedThreadPool()Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newCachedThreadPool(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.newSingleThreadScheduledExecutor()Ljava/util/concurrent/ScheduledExecutorService;
java/util/concurrent/Executors.newSingleThreadScheduledExecutor(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
java/util/concurrent/Executors.newScheduledThreadPool(I)Ljava/util/concurrent/ScheduledExecutorService;
java/util/concurrent/Executors.newScheduledThreadPool(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
java/util/concurrent/Executors.unconfigurableExecutorService(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/ExecutorService;
java/util/concurrent/Executors.unconfigurableScheduledExecutorService(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;
java/util/concurrent/Executors.defaultThreadFactory()Ljava/util/concurrent/ThreadFactory;
java/util/concurrent/Executors.privilegedThreadFactory()Ljava/util/concurrent/ThreadFactory;
java/util/concurrent/Executors.callable(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Callable;
java/util/concurrent/Executors.callable(Ljava/lang/Runnable;)Ljava/util/concurrent/Callable;
java/util/concurrent/Executors.callable(Ljava/security/PrivilegedAction;)Ljava/util/concurrent/Callable;
java/util/concurrent/Executors.callable(Ljava/security/PrivilegedExceptionAction;)Ljava/util/concurrent/Callable;
java/util/concurrent/Executors.privilegedCallable(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;
java/util/concurrent/Executors.privilegedCallableUsingCurrentClassLoader(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;

java/util/concurrent/ExecutorCompletionService.newTaskFor(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/ExecutorCompletionService.newTaskFor(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;


java/util/concurrent/ExecutorCompletionService.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorCompletionService.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorCompletionService.take()Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorCompletionService.poll()Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorCompletionService.poll(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Future;
java/util/concurrent/ExecutorCompletionService.access$000(Ljava/util/concurrent/ExecutorCompletionService;)Ljava/util/concurrent/BlockingQueue;
java/util/concurrent/Exchanger.arenaExchange(Ljava/lang/Object;ZJ)Ljava/lang/Object;
java/util/concurrent/Exchanger.slotExchange(Ljava/lang/Object;ZJ)Ljava/lang/Object;

java/util/concurrent/Exchanger.exchange(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/Exchanger.exchange(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;



java/util/concurrent/DelayQueue.add(Ljava/util/concurrent/Delayed;)Z
java/util/concurrent/DelayQueue.offer(Ljava/util/concurrent/Delayed;)Z
java/util/concurrent/DelayQueue.put(Ljava/util/concurrent/Delayed;)V
java/util/concurrent/DelayQueue.offer(Ljava/util/concurrent/Delayed;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/DelayQueue.poll()Ljava/util/concurrent/Delayed;
java/util/concurrent/DelayQueue.take()Ljava/util/concurrent/Delayed;
java/util/concurrent/DelayQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/Delayed;
java/util/concurrent/DelayQueue.peek()Ljava/util/concurrent/Delayed;
java/util/concurrent/DelayQueue.size()I
java/util/concurrent/DelayQueue.peekExpired()Ljava/util/concurrent/Delayed;
java/util/concurrent/DelayQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/DelayQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/DelayQueue.clear()V
java/util/concurrent/DelayQueue.remainingCapacity()I
java/util/concurrent/DelayQueue.toArray()[Ljava/lang/Object;
java/util/concurrent/DelayQueue.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/DelayQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/DelayQueue.removeEQ(Ljava/lang/Object;)V
java/util/concurrent/DelayQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/DelayQueue.add(Ljava/lang/Object;)Z
java/util/concurrent/DelayQueue.peek()Ljava/lang/Object;
java/util/concurrent/DelayQueue.poll()Ljava/lang/Object;
java/util/concurrent/DelayQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/DelayQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/DelayQueue.take()Ljava/lang/Object;
java/util/concurrent/DelayQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/DelayQueue.put(Ljava/lang/Object;)V
java/util/concurrent/CyclicBarrier.nextGeneration()V
java/util/concurrent/CyclicBarrier.breakBarrier()V
java/util/concurrent/CyclicBarrier.dowait(ZJ)I


java/util/concurrent/CyclicBarrier.getParties()I
java/util/concurrent/CyclicBarrier.await()I
java/util/concurrent/CyclicBarrier.await(JLjava/util/concurrent/TimeUnit;)I
java/util/concurrent/CyclicBarrier.isBroken()Z
java/util/concurrent/CyclicBarrier.reset()V
java/util/concurrent/CyclicBarrier.getNumberWaiting()I

java/util/concurrent/CountDownLatch.await()V
java/util/concurrent/CountDownLatch.await(JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/CountDownLatch.countDown()V
java/util/concurrent/CountDownLatch.getCount()J
java/util/concurrent/CountDownLatch.toString()Ljava/lang/String;


java/util/concurrent/CopyOnWriteArraySet.size()I
java/util/concurrent/CopyOnWriteArraySet.isEmpty()Z
java/util/concurrent/CopyOnWriteArraySet.contains(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArraySet.toArray()[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArraySet.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArraySet.clear()V
java/util/concurrent/CopyOnWriteArraySet.remove(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArraySet.add(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArraySet.containsAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArraySet.addAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArraySet.removeAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArraySet.retainAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArraySet.iterator()Ljava/util/Iterator;
java/util/concurrent/CopyOnWriteArraySet.equals(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArraySet.removeIf(Ljava/util/function/Predicate;)Z
java/util/concurrent/CopyOnWriteArraySet.forEach(Ljava/util/function/Consumer;)V
java/util/concurrent/CopyOnWriteArraySet.spliterator()Ljava/util/Spliterator;
java/util/concurrent/CopyOnWriteArraySet.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.getArray()[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.setArray([Ljava/lang/Object;)V



java/util/concurrent/CopyOnWriteArrayList.size()I
java/util/concurrent/CopyOnWriteArrayList.isEmpty()Z
java/util/concurrent/CopyOnWriteArrayList.eq(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.indexOf(Ljava/lang/Object;[Ljava/lang/Object;II)I
java/util/concurrent/CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;[Ljava/lang/Object;I)I
java/util/concurrent/CopyOnWriteArrayList.contains(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.indexOf(Ljava/lang/Object;)I
java/util/concurrent/CopyOnWriteArrayList.indexOf(Ljava/lang/Object;I)I
java/util/concurrent/CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;)I
java/util/concurrent/CopyOnWriteArrayList.lastIndexOf(Ljava/lang/Object;I)I
java/util/concurrent/CopyOnWriteArrayList.clone()Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.toArray()[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.get([Ljava/lang/Object;I)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.get(I)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.add(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.add(ILjava/lang/Object;)V
java/util/concurrent/CopyOnWriteArrayList.remove(I)Ljava/lang/Object;
java/util/concurrent/CopyOnWriteArrayList.remove(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.remove(Ljava/lang/Object;[Ljava/lang/Object;I)Z
java/util/concurrent/CopyOnWriteArrayList.removeRange(II)V
java/util/concurrent/CopyOnWriteArrayList.addIfAbsent(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.addIfAbsent(Ljava/lang/Object;[Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.containsAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.removeAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.retainAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.addAllAbsent(Ljava/util/Collection;)I
java/util/concurrent/CopyOnWriteArrayList.clear()V
java/util/concurrent/CopyOnWriteArrayList.addAll(Ljava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.addAll(ILjava/util/Collection;)Z
java/util/concurrent/CopyOnWriteArrayList.forEach(Ljava/util/function/Consumer;)V
java/util/concurrent/CopyOnWriteArrayList.removeIf(Ljava/util/function/Predicate;)Z
java/util/concurrent/CopyOnWriteArrayList.replaceAll(Ljava/util/function/UnaryOperator;)V
java/util/concurrent/CopyOnWriteArrayList.sort(Ljava/util/Comparator;)V
java/util/concurrent/CopyOnWriteArrayList.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/CopyOnWriteArrayList.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/CopyOnWriteArrayList.toString()Ljava/lang/String;
java/util/concurrent/CopyOnWriteArrayList.equals(Ljava/lang/Object;)Z
java/util/concurrent/CopyOnWriteArrayList.hashCode()I
java/util/concurrent/CopyOnWriteArrayList.iterator()Ljava/util/Iterator;
java/util/concurrent/CopyOnWriteArrayList.listIterator()Ljava/util/ListIterator;
java/util/concurrent/CopyOnWriteArrayList.listIterator(I)Ljava/util/ListIterator;
java/util/concurrent/CopyOnWriteArrayList.spliterator()Ljava/util/Spliterator;
java/util/concurrent/CopyOnWriteArrayList.subList(II)Ljava/util/List;
java/util/concurrent/CopyOnWriteArrayList.resetLock()V






java/util/concurrent/ConcurrentSkipListSet.clone()Ljava/util/concurrent/ConcurrentSkipListSet;
java/util/concurrent/ConcurrentSkipListSet.size()I
java/util/concurrent/ConcurrentSkipListSet.isEmpty()Z
java/util/concurrent/ConcurrentSkipListSet.contains(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListSet.add(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListSet.remove(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListSet.clear()V
java/util/concurrent/ConcurrentSkipListSet.iterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentSkipListSet.descendingIterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentSkipListSet.equals(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListSet.removeAll(Ljava/util/Collection;)Z
java/util/concurrent/ConcurrentSkipListSet.lower(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.floor(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.ceiling(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.higher(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.pollFirst()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.pollLast()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.comparator()Ljava/util/Comparator;
java/util/concurrent/ConcurrentSkipListSet.first()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.last()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.subSet(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.headSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.tailSet(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.headSet(Ljava/lang/Object;)Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.tailSet(Ljava/lang/Object;)Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.descendingSet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListSet.spliterator()Ljava/util/Spliterator;
java/util/concurrent/ConcurrentSkipListSet.setMap(Ljava/util/concurrent/ConcurrentNavigableMap;)V
java/util/concurrent/ConcurrentSkipListSet.clone()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListSet.tailSet(Ljava/lang/Object;)Ljava/util/SortedSet;
java/util/concurrent/ConcurrentSkipListSet.headSet(Ljava/lang/Object;)Ljava/util/SortedSet;
java/util/concurrent/ConcurrentSkipListSet.subSet(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedSet;

java/util/concurrent/ConcurrentSkipListMap.initialize()V
java/util/concurrent/ConcurrentSkipListMap.casHead(Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;Ljava/util/concurrent/ConcurrentSkipListMap$HeadIndex;)Z
java/util/concurrent/ConcurrentSkipListMap.cpr(Ljava/util/Comparator;Ljava/lang/Object;Ljava/lang/Object;)I
java/util/concurrent/ConcurrentSkipListMap.findPredecessor(Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;
java/util/concurrent/ConcurrentSkipListMap.findNode(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;
java/util/concurrent/ConcurrentSkipListMap.doGet(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.doPut(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.doRemove(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.tryReduceLevel()V
java/util/concurrent/ConcurrentSkipListMap.findFirst()Ljava/util/concurrent/ConcurrentSkipListMap$Node;
java/util/concurrent/ConcurrentSkipListMap.doRemoveFirstEntry()Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.clearIndexToFirst()V
java/util/concurrent/ConcurrentSkipListMap.doRemoveLastEntry()Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.findLast()Ljava/util/concurrent/ConcurrentSkipListMap$Node;
java/util/concurrent/ConcurrentSkipListMap.findPredecessorOfLast()Ljava/util/concurrent/ConcurrentSkipListMap$Node;
java/util/concurrent/ConcurrentSkipListMap.findNear(Ljava/lang/Object;ILjava/util/Comparator;)Ljava/util/concurrent/ConcurrentSkipListMap$Node;
java/util/concurrent/ConcurrentSkipListMap.getNear(Ljava/lang/Object;I)Ljava/util/AbstractMap$SimpleImmutableEntry;




java/util/concurrent/ConcurrentSkipListMap.clone()Ljava/util/concurrent/ConcurrentSkipListMap;
java/util/concurrent/ConcurrentSkipListMap.buildFromSorted(Ljava/util/SortedMap;)V
java/util/concurrent/ConcurrentSkipListMap.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/ConcurrentSkipListMap.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/ConcurrentSkipListMap.containsKey(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.containsValue(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListMap.size()I
java/util/concurrent/ConcurrentSkipListMap.isEmpty()Z
java/util/concurrent/ConcurrentSkipListMap.clear()V
java/util/concurrent/ConcurrentSkipListMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.keySet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListMap.navigableKeySet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListMap.values()Ljava/util/Collection;
java/util/concurrent/ConcurrentSkipListMap.entrySet()Ljava/util/Set;
java/util/concurrent/ConcurrentSkipListMap.descendingMap()Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.descendingKeySet()Ljava/util/NavigableSet;
java/util/concurrent/ConcurrentSkipListMap.equals(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.remove(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentSkipListMap.replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.comparator()Ljava/util/Comparator;
java/util/concurrent/ConcurrentSkipListMap.firstKey()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.lastKey()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.headMap(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.tailMap(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.headMap(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.tailMap(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentNavigableMap;
java/util/concurrent/ConcurrentSkipListMap.lowerEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.lowerKey(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.floorEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.floorKey(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.ceilingEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.ceilingKey(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.higherEntry(Ljava/lang/Object;)Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.higherKey(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.firstEntry()Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.lastEntry()Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.pollFirstEntry()Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.pollLastEntry()Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentSkipListMap.keyIterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentSkipListMap.valueIterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentSkipListMap.entryIterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentSkipListMap.toList(Ljava/util/Collection;)Ljava/util/List;
java/util/concurrent/ConcurrentSkipListMap.forEach(Ljava/util/function/BiConsumer;)V
java/util/concurrent/ConcurrentSkipListMap.replaceAll(Ljava/util/function/BiFunction;)V
java/util/concurrent/ConcurrentSkipListMap.keySpliterator()Ljava/util/concurrent/ConcurrentSkipListMap$KeySpliterator;
java/util/concurrent/ConcurrentSkipListMap.valueSpliterator()Ljava/util/concurrent/ConcurrentSkipListMap$ValueSpliterator;
java/util/concurrent/ConcurrentSkipListMap.entrySpliterator()Ljava/util/concurrent/ConcurrentSkipListMap$EntrySpliterator;
java/util/concurrent/ConcurrentSkipListMap.clone()Ljava/lang/Object;
java/util/concurrent/ConcurrentSkipListMap.keySet()Ljava/util/Set;
java/util/concurrent/ConcurrentSkipListMap.tailMap(Ljava/lang/Object;)Ljava/util/SortedMap;
java/util/concurrent/ConcurrentSkipListMap.headMap(Ljava/lang/Object;)Ljava/util/SortedMap;
java/util/concurrent/ConcurrentSkipListMap.subMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/SortedMap;
java/util/concurrent/ConcurrentSkipListMap.tailMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentSkipListMap.headMap(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentSkipListMap.subMap(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentSkipListMap.descendingMap()Ljava/util/NavigableMap;
java/util/concurrent/ConcurrentSkipListMap.access$000()Ljava/lang/Object;



java/util/concurrent/ConcurrentLinkedQueue.add(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedQueue.updateHead(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)V
java/util/concurrent/ConcurrentLinkedQueue.succ(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Ljava/util/concurrent/ConcurrentLinkedQueue$Node;
java/util/concurrent/ConcurrentLinkedQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedQueue.poll()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedQueue.peek()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedQueue.first()Ljava/util/concurrent/ConcurrentLinkedQueue$Node;
java/util/concurrent/ConcurrentLinkedQueue.isEmpty()Z
java/util/concurrent/ConcurrentLinkedQueue.size()I
java/util/concurrent/ConcurrentLinkedQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedQueue.addAll(Ljava/util/Collection;)Z
java/util/concurrent/ConcurrentLinkedQueue.toArray()[Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedQueue.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentLinkedQueue.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/ConcurrentLinkedQueue.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/ConcurrentLinkedQueue.spliterator()Ljava/util/Spliterator;
java/util/concurrent/ConcurrentLinkedQueue.checkNotNull(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedQueue.casTail(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z
java/util/concurrent/ConcurrentLinkedQueue.casHead(Ljava/util/concurrent/ConcurrentLinkedQueue$Node;Ljava/util/concurrent/ConcurrentLinkedQueue$Node;)Z

java/util/concurrent/ConcurrentLinkedDeque.prevTerminator()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;
java/util/concurrent/ConcurrentLinkedDeque.nextTerminator()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;
java/util/concurrent/ConcurrentLinkedDeque.linkFirst(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedDeque.linkLast(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedDeque.unlink(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V
java/util/concurrent/ConcurrentLinkedDeque.unlinkFirst(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V
java/util/concurrent/ConcurrentLinkedDeque.unlinkLast(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V
java/util/concurrent/ConcurrentLinkedDeque.updateHead()V
java/util/concurrent/ConcurrentLinkedDeque.updateTail()V
java/util/concurrent/ConcurrentLinkedDeque.skipDeletedPredecessors(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V
java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V
java/util/concurrent/ConcurrentLinkedDeque.succ(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;
java/util/concurrent/ConcurrentLinkedDeque.pred(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node;
java/util/concurrent/ConcurrentLinkedDeque.first()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;
java/util/concurrent/ConcurrentLinkedDeque.last()Ljava/util/concurrent/ConcurrentLinkedDeque$Node;
java/util/concurrent/ConcurrentLinkedDeque.checkNotNull(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedDeque.screenNullResult(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.toArrayList()Ljava/util/ArrayList;


java/util/concurrent/ConcurrentLinkedDeque.initHeadTail(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)V
java/util/concurrent/ConcurrentLinkedDeque.addFirst(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedDeque.addLast(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedDeque.offerFirst(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.offerLast(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.peekFirst()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.peekLast()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.getFirst()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.getLast()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.pollFirst()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.pollLast()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.removeFirst()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.removeLast()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.offer(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.add(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.poll()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.peek()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.remove()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.pop()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.element()Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.push(Ljava/lang/Object;)V
java/util/concurrent/ConcurrentLinkedDeque.removeFirstOccurrence(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.removeLastOccurrence(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.contains(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.isEmpty()Z
java/util/concurrent/ConcurrentLinkedDeque.size()I
java/util/concurrent/ConcurrentLinkedDeque.remove(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentLinkedDeque.addAll(Ljava/util/Collection;)Z
java/util/concurrent/ConcurrentLinkedDeque.clear()V
java/util/concurrent/ConcurrentLinkedDeque.toArray()[Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/ConcurrentLinkedDeque.iterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentLinkedDeque.descendingIterator()Ljava/util/Iterator;
java/util/concurrent/ConcurrentLinkedDeque.spliterator()Ljava/util/Spliterator;
java/util/concurrent/ConcurrentLinkedDeque.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/ConcurrentLinkedDeque.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/ConcurrentLinkedDeque.casHead(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z
java/util/concurrent/ConcurrentLinkedDeque.casTail(Ljava/util/concurrent/ConcurrentLinkedDeque$Node;Ljava/util/concurrent/ConcurrentLinkedDeque$Node;)Z

java/util/concurrent/ConcurrentHashMap.spread(I)I
java/util/concurrent/ConcurrentHashMap.tableSizeFor(I)I
java/util/concurrent/ConcurrentHashMap.comparableClassFor(Ljava/lang/Object;)Ljava/lang/Class;
java/util/concurrent/ConcurrentHashMap.compareComparables(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/Object;)I
java/util/concurrent/ConcurrentHashMap.tabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;I)Ljava/util/concurrent/ConcurrentHashMap$Node;
java/util/concurrent/ConcurrentHashMap.casTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)Z
java/util/concurrent/ConcurrentHashMap.setTabAt([Ljava/util/concurrent/ConcurrentHashMap$Node;ILjava/util/concurrent/ConcurrentHashMap$Node;)V





java/util/concurrent/ConcurrentHashMap.size()I
java/util/concurrent/ConcurrentHashMap.isEmpty()Z
java/util/concurrent/ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.containsKey(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentHashMap.containsValue(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.putVal(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.putAll(Ljava/util/Map;)V
java/util/concurrent/ConcurrentHashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.replaceNode(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.clear()V
java/util/concurrent/ConcurrentHashMap.keySet()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
java/util/concurrent/ConcurrentHashMap.values()Ljava/util/Collection;
java/util/concurrent/ConcurrentHashMap.entrySet()Ljava/util/Set;
java/util/concurrent/ConcurrentHashMap.hashCode()I
java/util/concurrent/ConcurrentHashMap.toString()Ljava/lang/String;
java/util/concurrent/ConcurrentHashMap.equals(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentHashMap.writeObject(Ljava/io/ObjectOutputStream;)V
java/util/concurrent/ConcurrentHashMap.readObject(Ljava/io/ObjectInputStream;)V
java/util/concurrent/ConcurrentHashMap.putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.remove(Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentHashMap.replace(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentHashMap.replace(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.getOrDefault(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.forEach(Ljava/util/function/BiConsumer;)V
java/util/concurrent/ConcurrentHashMap.replaceAll(Ljava/util/function/BiFunction;)V
java/util/concurrent/ConcurrentHashMap.computeIfAbsent(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.computeIfPresent(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.compute(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.merge(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.contains(Ljava/lang/Object;)Z
java/util/concurrent/ConcurrentHashMap.keys()Ljava/util/Enumeration;
java/util/concurrent/ConcurrentHashMap.elements()Ljava/util/Enumeration;
java/util/concurrent/ConcurrentHashMap.mappingCount()J
java/util/concurrent/ConcurrentHashMap.newKeySet()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
java/util/concurrent/ConcurrentHashMap.newKeySet(I)Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
java/util/concurrent/ConcurrentHashMap.keySet(Ljava/lang/Object;)Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
java/util/concurrent/ConcurrentHashMap.resizeStamp(I)I
java/util/concurrent/ConcurrentHashMap.initTable()[Ljava/util/concurrent/ConcurrentHashMap$Node;
java/util/concurrent/ConcurrentHashMap.addCount(JI)V
java/util/concurrent/ConcurrentHashMap.helpTransfer([Ljava/util/concurrent/ConcurrentHashMap$Node;Ljava/util/concurrent/ConcurrentHashMap$Node;)[Ljava/util/concurrent/ConcurrentHashMap$Node;
java/util/concurrent/ConcurrentHashMap.tryPresize(I)V
java/util/concurrent/ConcurrentHashMap.transfer([Ljava/util/concurrent/ConcurrentHashMap$Node;[Ljava/util/concurrent/ConcurrentHashMap$Node;)V
java/util/concurrent/ConcurrentHashMap.sumCount()J
java/util/concurrent/ConcurrentHashMap.fullAddCount(JZ)V
java/util/concurrent/ConcurrentHashMap.treeifyBin([Ljava/util/concurrent/ConcurrentHashMap$Node;I)V
java/util/concurrent/ConcurrentHashMap.untreeify(Ljava/util/concurrent/ConcurrentHashMap$Node;)Ljava/util/concurrent/ConcurrentHashMap$Node;
java/util/concurrent/ConcurrentHashMap.batchFor(J)I
java/util/concurrent/ConcurrentHashMap.forEach(JLjava/util/function/BiConsumer;)V
java/util/concurrent/ConcurrentHashMap.forEach(JLjava/util/function/BiFunction;Ljava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.search(JLjava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduce(JLjava/util/function/BiFunction;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceToDouble(JLjava/util/function/ToDoubleBiFunction;DLjava/util/function/DoubleBinaryOperator;)D
java/util/concurrent/ConcurrentHashMap.reduceToLong(JLjava/util/function/ToLongBiFunction;JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/ConcurrentHashMap.reduceToInt(JLjava/util/function/ToIntBiFunction;ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/ConcurrentHashMap.forEachKey(JLjava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.forEachKey(JLjava/util/function/Function;Ljava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.searchKeys(JLjava/util/function/Function;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceKeys(JLjava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceKeys(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceKeysToDouble(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D
java/util/concurrent/ConcurrentHashMap.reduceKeysToLong(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/ConcurrentHashMap.reduceKeysToInt(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/ConcurrentHashMap.forEachValue(JLjava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.forEachValue(JLjava/util/function/Function;Ljava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.searchValues(JLjava/util/function/Function;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceValues(JLjava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceValues(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceValuesToDouble(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D
java/util/concurrent/ConcurrentHashMap.reduceValuesToLong(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/ConcurrentHashMap.reduceValuesToInt(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/ConcurrentHashMap.forEachEntry(JLjava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.forEachEntry(JLjava/util/function/Function;Ljava/util/function/Consumer;)V
java/util/concurrent/ConcurrentHashMap.searchEntries(JLjava/util/function/Function;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceEntries(JLjava/util/function/BiFunction;)Ljava/util/Map$Entry;
java/util/concurrent/ConcurrentHashMap.reduceEntries(JLjava/util/function/Function;Ljava/util/function/BiFunction;)Ljava/lang/Object;
java/util/concurrent/ConcurrentHashMap.reduceEntriesToDouble(JLjava/util/function/ToDoubleFunction;DLjava/util/function/DoubleBinaryOperator;)D
java/util/concurrent/ConcurrentHashMap.reduceEntriesToLong(JLjava/util/function/ToLongFunction;JLjava/util/function/LongBinaryOperator;)J
java/util/concurrent/ConcurrentHashMap.reduceEntriesToInt(JLjava/util/function/ToIntFunction;ILjava/util/function/IntBinaryOperator;)I
java/util/concurrent/ConcurrentHashMap.keySet()Ljava/util/Set;

java/util/concurrent/ArrayBlockingQueue.dec(I)I
java/util/concurrent/ArrayBlockingQueue.itemAt(I)Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.checkNotNull(Ljava/lang/Object;)V
java/util/concurrent/ArrayBlockingQueue.enqueue(Ljava/lang/Object;)V
java/util/concurrent/ArrayBlockingQueue.dequeue()Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.removeAt(I)V



java/util/concurrent/ArrayBlockingQueue.add(Ljava/lang/Object;)Z
java/util/concurrent/ArrayBlockingQueue.offer(Ljava/lang/Object;)Z
java/util/concurrent/ArrayBlockingQueue.put(Ljava/lang/Object;)V
java/util/concurrent/ArrayBlockingQueue.offer(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
java/util/concurrent/ArrayBlockingQueue.poll()Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.take()Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.poll(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.peek()Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.size()I
java/util/concurrent/ArrayBlockingQueue.remainingCapacity()I
java/util/concurrent/ArrayBlockingQueue.remove(Ljava/lang/Object;)Z
java/util/concurrent/ArrayBlockingQueue.contains(Ljava/lang/Object;)Z
java/util/concurrent/ArrayBlockingQueue.toArray()[Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java/util/concurrent/ArrayBlockingQueue.toString()Ljava/lang/String;
java/util/concurrent/ArrayBlockingQueue.clear()V
java/util/concurrent/ArrayBlockingQueue.drainTo(Ljava/util/Collection;)I
java/util/concurrent/ArrayBlockingQueue.drainTo(Ljava/util/Collection;I)I
java/util/concurrent/ArrayBlockingQueue.iterator()Ljava/util/Iterator;
java/util/concurrent/ArrayBlockingQueue.spliterator()Ljava/util/Spliterator;
java/util/concurrent/ArrayBlockingQueue.readObject(Ljava/io/ObjectInputStream;)V

java/util/concurrent/AbstractExecutorService.newTaskFor(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/AbstractExecutorService.newTaskFor(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;
java/util/concurrent/AbstractExecutorService.submit(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
java/util/concurrent/AbstractExecutorService.submit(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
java/util/concurrent/AbstractExecutorService.submit(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
java/util/concurrent/AbstractExecutorService.doInvokeAny(Ljava/util/Collection;ZJ)Ljava/lang/Object;
java/util/concurrent/AbstractExecutorService.invokeAny(Ljava/util/Collection;)Ljava/lang/Object;
java/util/concurrent/AbstractExecutorService.invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
java/util/concurrent/AbstractExecutorService.invokeAll(Ljava/util/Collection;)Ljava/util/List;
java/util/concurrent/AbstractExecutorService.invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;




java/nio/channels/SocketChannel.<init>(Ljava/nio/channels/spi/SelectorProvider;)V
java/nio/channels/SocketChannel.open()Ljava/nio/channels/SocketChannel;
java/nio/channels/SocketChannel.open(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;
java/nio/channels/SocketChannel.validOps()I
java/nio/channels/SocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;
java/nio/channels/SocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/SocketChannel;
java/nio/channels/SocketChannel.shutdownInput()Ljava/nio/channels/SocketChannel;
java/nio/channels/SocketChannel.shutdownOutput()Ljava/nio/channels/SocketChannel;
java/nio/channels/SocketChannel.socket()Ljava/net/Socket;
java/nio/channels/SocketChannel.isConnected()Z
java/nio/channels/SocketChannel.isConnectionPending()Z
java/nio/channels/SocketChannel.connect(Ljava/net/SocketAddress;)Z
java/nio/channels/SocketChannel.finishConnect()Z
java/nio/channels/SocketChannel.getRemoteAddress()Ljava/net/SocketAddress;
java/nio/channels/SocketChannel.read(Ljava/nio/ByteBuffer;)I
java/nio/channels/SocketChannel.read([Ljava/nio/ByteBuffer;II)J
java/nio/channels/SocketChannel.read([Ljava/nio/ByteBuffer;)J
java/nio/channels/SocketChannel.write(Ljava/nio/ByteBuffer;)I
java/nio/channels/SocketChannel.write([Ljava/nio/ByteBuffer;II)J
java/nio/channels/SocketChannel.write([Ljava/nio/ByteBuffer;)J
java/nio/channels/SocketChannel.getLocalAddress()Ljava/net/SocketAddress;
java/nio/channels/SocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/SocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/SocketChannel.<clinit>()V
java/nio/channels/ServerSocketChannel.<init>(Ljava/nio/channels/spi/SelectorProvider;)V
java/nio/channels/ServerSocketChannel.open()Ljava/nio/channels/ServerSocketChannel;
java/nio/channels/ServerSocketChannel.validOps()I
java/nio/channels/ServerSocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/ServerSocketChannel;
java/nio/channels/ServerSocketChannel.bind(Ljava/net/SocketAddress;I)Ljava/nio/channels/ServerSocketChannel;
java/nio/channels/ServerSocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/ServerSocketChannel;
java/nio/channels/ServerSocketChannel.socket()Ljava/net/ServerSocket;
java/nio/channels/ServerSocketChannel.accept()Ljava/nio/channels/SocketChannel;
java/nio/channels/ServerSocketChannel.getLocalAddress()Ljava/net/SocketAddress;
java/nio/channels/ServerSocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/ServerSocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/Selector.<init>()V
java/nio/channels/Selector.open()Ljava/nio/channels/Selector;
java/nio/channels/Selector.isOpen()Z
java/nio/channels/Selector.provider()Ljava/nio/channels/spi/SelectorProvider;
java/nio/channels/Selector.keys()Ljava/util/Set;
java/nio/channels/Selector.selectedKeys()Ljava/util/Set;
java/nio/channels/Selector.selectNow()I
java/nio/channels/Selector.select(J)I
java/nio/channels/Selector.select()I
java/nio/channels/Selector.wakeup()Ljava/nio/channels/Selector;
java/nio/channels/Selector.close()V
java/nio/channels/SelectionKey.<init>()V
java/nio/channels/SelectionKey.channel()Ljava/nio/channels/SelectableChannel;
java/nio/channels/SelectionKey.selector()Ljava/nio/channels/Selector;
java/nio/channels/SelectionKey.isValid()Z
java/nio/channels/SelectionKey.cancel()V
java/nio/channels/SelectionKey.interestOps()I
java/nio/channels/SelectionKey.interestOps(I)Ljava/nio/channels/SelectionKey;
java/nio/channels/SelectionKey.readyOps()I
java/nio/channels/SelectionKey.isReadable()Z
java/nio/channels/SelectionKey.isWritable()Z
java/nio/channels/SelectionKey.isConnectable()Z
java/nio/channels/SelectionKey.isAcceptable()Z
java/nio/channels/SelectionKey.attach(Ljava/lang/Object;)Ljava/lang/Object;
java/nio/channels/SelectionKey.attachment()Ljava/lang/Object;
java/nio/channels/SelectionKey.<clinit>()V
java/nio/channels/SelectableChannel.<init>()V
java/nio/channels/SelectableChannel.provider()Ljava/nio/channels/spi/SelectorProvider;
java/nio/channels/SelectableChannel.validOps()I
java/nio/channels/SelectableChannel.isRegistered()Z
java/nio/channels/SelectableChannel.keyFor(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;
java/nio/channels/SelectableChannel.register(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;
java/nio/channels/SelectableChannel.register(Ljava/nio/channels/Selector;I)Ljava/nio/channels/SelectionKey;
java/nio/channels/SelectableChannel.configureBlocking(Z)Ljava/nio/channels/SelectableChannel;
java/nio/channels/SelectableChannel.isBlocking()Z
java/nio/channels/SelectableChannel.blockingLock()Ljava/lang/Object;
java/nio/channels/Pipe$SourceChannel.<init>(Ljava/nio/channels/spi/SelectorProvider;)V
java/nio/channels/Pipe$SourceChannel.validOps()I
java/nio/channels/Pipe$SinkChannel.<init>(Ljava/nio/channels/spi/SelectorProvider;)V
java/nio/channels/Pipe$SinkChannel.validOps()I
java/nio/channels/Pipe.<init>()V
java/nio/channels/Pipe.source()Ljava/nio/channels/Pipe$SourceChannel;
java/nio/channels/Pipe.sink()Ljava/nio/channels/Pipe$SinkChannel;
java/nio/channels/Pipe.open()Ljava/nio/channels/Pipe;
java/nio/channels/MembershipKey.<init>()V
java/nio/channels/MembershipKey.isValid()Z
java/nio/channels/MembershipKey.drop()V
java/nio/channels/MembershipKey.block(Ljava/net/InetAddress;)Ljava/nio/channels/MembershipKey;
java/nio/channels/MembershipKey.unblock(Ljava/net/InetAddress;)Ljava/nio/channels/MembershipKey;
java/nio/channels/MembershipKey.channel()Ljava/nio/channels/MulticastChannel;
java/nio/channels/MembershipKey.group()Ljava/net/InetAddress;
java/nio/channels/MembershipKey.networkInterface()Ljava/net/NetworkInterface;
java/nio/channels/MembershipKey.sourceAddress()Ljava/net/InetAddress;
java/nio/channels/FileLock.<init>(Ljava/nio/channels/FileChannel;JJZ)V
java/nio/channels/FileLock.<init>(Ljava/nio/channels/AsynchronousFileChannel;JJZ)V
java/nio/channels/FileLock.channel()Ljava/nio/channels/FileChannel;
java/nio/channels/FileLock.acquiredBy()Ljava/nio/channels/Channel;
java/nio/channels/FileLock.position()J
java/nio/channels/FileLock.size()J
java/nio/channels/FileLock.isShared()Z
java/nio/channels/FileLock.overlaps(JJ)Z
java/nio/channels/FileLock.isValid()Z
java/nio/channels/FileLock.release()V
java/nio/channels/FileLock.close()V
java/nio/channels/FileLock.toString()Ljava/lang/String;
java/nio/channels/FileChannel$MapMode.<init>(Ljava/lang/String;)V
java/nio/channels/FileChannel$MapMode.toString()Ljava/lang/String;
java/nio/channels/FileChannel$MapMode.<clinit>()V
java/nio/channels/FileChannel.<init>()V
java/nio/channels/FileChannel.open(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/FileChannel;
java/nio/channels/FileChannel.open(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/FileChannel;
java/nio/channels/FileChannel.read(Ljava/nio/ByteBuffer;)I
java/nio/channels/FileChannel.read([Ljava/nio/ByteBuffer;II)J
java/nio/channels/FileChannel.read([Ljava/nio/ByteBuffer;)J
java/nio/channels/FileChannel.write(Ljava/nio/ByteBuffer;)I
java/nio/channels/FileChannel.write([Ljava/nio/ByteBuffer;II)J
java/nio/channels/FileChannel.write([Ljava/nio/ByteBuffer;)J
java/nio/channels/FileChannel.position()J
java/nio/channels/FileChannel.position(J)Ljava/nio/channels/FileChannel;
java/nio/channels/FileChannel.size()J
java/nio/channels/FileChannel.truncate(J)Ljava/nio/channels/FileChannel;
java/nio/channels/FileChannel.force(Z)V
java/nio/channels/FileChannel.transferTo(JJLjava/nio/channels/WritableByteChannel;)J
java/nio/channels/FileChannel.transferFrom(Ljava/nio/channels/ReadableByteChannel;JJ)J
java/nio/channels/FileChannel.read(Ljava/nio/ByteBuffer;J)I
java/nio/channels/FileChannel.write(Ljava/nio/ByteBuffer;J)I
java/nio/channels/FileChannel.map(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
java/nio/channels/FileChannel.lock(JJZ)Ljava/nio/channels/FileLock;
java/nio/channels/FileChannel.lock()Ljava/nio/channels/FileLock;
java/nio/channels/FileChannel.tryLock(JJZ)Ljava/nio/channels/FileLock;
java/nio/channels/FileChannel.tryLock()Ljava/nio/channels/FileLock;
java/nio/channels/FileChannel.truncate(J)Ljava/nio/channels/SeekableByteChannel;
java/nio/channels/FileChannel.position(J)Ljava/nio/channels/SeekableByteChannel;
java/nio/channels/FileChannel.<clinit>()V
java/nio/channels/DatagramChannel.<init>(Ljava/nio/channels/spi/SelectorProvider;)V
java/nio/channels/DatagramChannel.open()Ljava/nio/channels/DatagramChannel;
java/nio/channels/DatagramChannel.open(Ljava/net/ProtocolFamily;)Ljava/nio/channels/DatagramChannel;
java/nio/channels/DatagramChannel.validOps()I
java/nio/channels/DatagramChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;
java/nio/channels/DatagramChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/DatagramChannel;
java/nio/channels/DatagramChannel.socket()Ljava/net/DatagramSocket;
java/nio/channels/DatagramChannel.isConnected()Z
java/nio/channels/DatagramChannel.connect(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;
java/nio/channels/DatagramChannel.disconnect()Ljava/nio/channels/DatagramChannel;
java/nio/channels/DatagramChannel.getRemoteAddress()Ljava/net/SocketAddress;
java/nio/channels/DatagramChannel.receive(Ljava/nio/ByteBuffer;)Ljava/net/SocketAddress;
java/nio/channels/DatagramChannel.send(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
java/nio/channels/DatagramChannel.read(Ljava/nio/ByteBuffer;)I
java/nio/channels/DatagramChannel.read([Ljava/nio/ByteBuffer;II)J
java/nio/channels/DatagramChannel.read([Ljava/nio/ByteBuffer;)J
java/nio/channels/DatagramChannel.write(Ljava/nio/ByteBuffer;)I
java/nio/channels/DatagramChannel.write([Ljava/nio/ByteBuffer;II)J
java/nio/channels/DatagramChannel.write([Ljava/nio/ByteBuffer;)J
java/nio/channels/DatagramChannel.getLocalAddress()Ljava/net/SocketAddress;
java/nio/channels/DatagramChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/DatagramChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/Channels.<init>()V
java/nio/channels/Channels.checkNotNull(Ljava/lang/Object;Ljava/lang/String;)V
java/nio/channels/Channels.writeFullyImpl(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
java/nio/channels/Channels.writeFully(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
java/nio/channels/Channels.newInputStream(Ljava/nio/channels/ReadableByteChannel;)Ljava/io/InputStream;
java/nio/channels/Channels.newOutputStream(Ljava/nio/channels/WritableByteChannel;)Ljava/io/OutputStream;
java/nio/channels/Channels.newInputStream(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/InputStream;
java/nio/channels/Channels.newOutputStream(Ljava/nio/channels/AsynchronousByteChannel;)Ljava/io/OutputStream;
java/nio/channels/Channels.newChannel(Ljava/io/InputStream;)Ljava/nio/channels/ReadableByteChannel;
java/nio/channels/Channels.newChannel(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;
java/nio/channels/Channels.newReader(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/charset/CharsetDecoder;I)Ljava/io/Reader;
java/nio/channels/Channels.newReader(Ljava/nio/channels/ReadableByteChannel;Ljava/lang/String;)Ljava/io/Reader;
java/nio/channels/Channels.newWriter(Ljava/nio/channels/WritableByteChannel;Ljava/nio/charset/CharsetEncoder;I)Ljava/io/Writer;
java/nio/channels/Channels.newWriter(Ljava/nio/channels/WritableByteChannel;Ljava/lang/String;)Ljava/io/Writer;
java/nio/channels/Channels.access$000(Ljava/nio/channels/WritableByteChannel;Ljava/nio/ByteBuffer;)V
java/nio/channels/AsynchronousSocketChannel.<init>(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V
java/nio/channels/AsynchronousSocketChannel.provider()Ljava/nio/channels/spi/AsynchronousChannelProvider;
java/nio/channels/AsynchronousSocketChannel.open(Ljava/nio/channels/AsynchronousChannelGroup;)Ljava/nio/channels/AsynchronousSocketChannel;
java/nio/channels/AsynchronousSocketChannel.open()Ljava/nio/channels/AsynchronousSocketChannel;
java/nio/channels/AsynchronousSocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/AsynchronousSocketChannel;
java/nio/channels/AsynchronousSocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousSocketChannel;
java/nio/channels/AsynchronousSocketChannel.shutdownInput()Ljava/nio/channels/AsynchronousSocketChannel;
java/nio/channels/AsynchronousSocketChannel.shutdownOutput()Ljava/nio/channels/AsynchronousSocketChannel;
java/nio/channels/AsynchronousSocketChannel.getRemoteAddress()Ljava/net/SocketAddress;
java/nio/channels/AsynchronousSocketChannel.connect(Ljava/net/SocketAddress;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.connect(Ljava/net/SocketAddress;)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousSocketChannel.read(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.read(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.read(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousSocketChannel.read([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.write(Ljava/nio/ByteBuffer;JLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.write(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.write(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousSocketChannel.write([Ljava/nio/ByteBuffer;IIJLjava/util/concurrent/TimeUnit;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousSocketChannel.getLocalAddress()Ljava/net/SocketAddress;
java/nio/channels/AsynchronousSocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/AsynchronousSocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/AsynchronousServerSocketChannel.<init>(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V
java/nio/channels/AsynchronousServerSocketChannel.provider()Ljava/nio/channels/spi/AsynchronousChannelProvider;
java/nio/channels/AsynchronousServerSocketChannel.open(Ljava/nio/channels/AsynchronousChannelGroup;)Ljava/nio/channels/AsynchronousServerSocketChannel;
java/nio/channels/AsynchronousServerSocketChannel.open()Ljava/nio/channels/AsynchronousServerSocketChannel;
java/nio/channels/AsynchronousServerSocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/AsynchronousServerSocketChannel;
java/nio/channels/AsynchronousServerSocketChannel.bind(Ljava/net/SocketAddress;I)Ljava/nio/channels/AsynchronousServerSocketChannel;
java/nio/channels/AsynchronousServerSocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/AsynchronousServerSocketChannel;
java/nio/channels/AsynchronousServerSocketChannel.accept(Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousServerSocketChannel.accept()Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousServerSocketChannel.getLocalAddress()Ljava/net/SocketAddress;
java/nio/channels/AsynchronousServerSocketChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/AsynchronousServerSocketChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/AsynchronousFileChannel.<init>()V
java/nio/channels/AsynchronousFileChannel.open(Ljava/nio/file/Path;Ljava/util/Set;Ljava/util/concurrent/ExecutorService;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/AsynchronousFileChannel;
java/nio/channels/AsynchronousFileChannel.open(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/AsynchronousFileChannel;
java/nio/channels/AsynchronousFileChannel.size()J
java/nio/channels/AsynchronousFileChannel.truncate(J)Ljava/nio/channels/AsynchronousFileChannel;
java/nio/channels/AsynchronousFileChannel.force(Z)V
java/nio/channels/AsynchronousFileChannel.lock(JJZLjava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousFileChannel.lock(Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousFileChannel.lock(JJZ)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousFileChannel.lock()Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousFileChannel.tryLock(JJZ)Ljava/nio/channels/FileLock;
java/nio/channels/AsynchronousFileChannel.tryLock()Ljava/nio/channels/FileLock;
java/nio/channels/AsynchronousFileChannel.read(Ljava/nio/ByteBuffer;JLjava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousFileChannel.read(Ljava/nio/ByteBuffer;J)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousFileChannel.write(Ljava/nio/ByteBuffer;JLjava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousFileChannel.write(Ljava/nio/ByteBuffer;J)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousFileChannel.<clinit>()V
java/nio/channels/AsynchronousChannelGroup.<init>(Ljava/nio/channels/spi/AsynchronousChannelProvider;)V
java/nio/channels/AsynchronousChannelGroup.provider()Ljava/nio/channels/spi/AsynchronousChannelProvider;
java/nio/channels/AsynchronousChannelGroup.withFixedThreadPool(ILjava/util/concurrent/ThreadFactory;)Ljava/nio/channels/AsynchronousChannelGroup;
java/nio/channels/AsynchronousChannelGroup.withCachedThreadPool(Ljava/util/concurrent/ExecutorService;I)Ljava/nio/channels/AsynchronousChannelGroup;
java/nio/channels/AsynchronousChannelGroup.withThreadPool(Ljava/util/concurrent/ExecutorService;)Ljava/nio/channels/AsynchronousChannelGroup;
java/nio/channels/AsynchronousChannelGroup.isShutdown()Z
java/nio/channels/AsynchronousChannelGroup.isTerminated()Z
java/nio/channels/AsynchronousChannelGroup.shutdown()V
java/nio/channels/AsynchronousChannelGroup.shutdownNow()V
java/nio/channels/AsynchronousChannelGroup.awaitTermination(JLjava/util/concurrent/TimeUnit;)Z
java/nio/channels/WritableByteChannel.write(Ljava/nio/ByteBuffer;)I
java/nio/channels/SeekableByteChannel.read(Ljava/nio/ByteBuffer;)I
java/nio/channels/SeekableByteChannel.write(Ljava/nio/ByteBuffer;)I
java/nio/channels/SeekableByteChannel.position()J
java/nio/channels/SeekableByteChannel.position(J)Ljava/nio/channels/SeekableByteChannel;
java/nio/channels/SeekableByteChannel.size()J
java/nio/channels/SeekableByteChannel.truncate(J)Ljava/nio/channels/SeekableByteChannel;
java/nio/channels/ScatteringByteChannel.read([Ljava/nio/ByteBuffer;II)J
java/nio/channels/ScatteringByteChannel.read([Ljava/nio/ByteBuffer;)J
java/nio/channels/ReadableByteChannel.read(Ljava/nio/ByteBuffer;)I
java/nio/channels/NetworkChannel.bind(Ljava/net/SocketAddress;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/NetworkChannel.getLocalAddress()Ljava/net/SocketAddress;
java/nio/channels/NetworkChannel.setOption(Ljava/net/SocketOption;Ljava/lang/Object;)Ljava/nio/channels/NetworkChannel;
java/nio/channels/NetworkChannel.getOption(Ljava/net/SocketOption;)Ljava/lang/Object;
java/nio/channels/NetworkChannel.supportedOptions()Ljava/util/Set;
java/nio/channels/MulticastChannel.close()V
java/nio/channels/MulticastChannel.join(Ljava/net/InetAddress;Ljava/net/NetworkInterface;)Ljava/nio/channels/MembershipKey;
java/nio/channels/MulticastChannel.join(Ljava/net/InetAddress;Ljava/net/NetworkInterface;Ljava/net/InetAddress;)Ljava/nio/channels/MembershipKey;
java/nio/channels/InterruptibleChannel.close()V
java/nio/channels/GatheringByteChannel.write([Ljava/nio/ByteBuffer;II)J
java/nio/channels/GatheringByteChannel.write([Ljava/nio/ByteBuffer;)J
java/nio/channels/CompletionHandler.completed(Ljava/lang/Object;Ljava/lang/Object;)V
java/nio/channels/CompletionHandler.failed(Ljava/lang/Throwable;Ljava/lang/Object;)V
java/nio/channels/AsynchronousChannel.close()V
java/nio/channels/AsynchronousByteChannel.read(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousByteChannel.read(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;
java/nio/channels/AsynchronousByteChannel.write(Ljava/nio/ByteBuffer;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
java/nio/channels/AsynchronousByteChannel.write(Ljava/nio/ByteBuffer;)Ljava/util/concurrent/Future;




# Testing

# com/mongodb/connection/ByteBufferBsonOutput.close()V

java/lang/Runnable.run()V

javax/net/SocketFactory.createSocket()Ljava/net/Socket;
javax/net/SocketFactory.createSocket(Ljava/lang/String;I)Ljava/net/Socket;
javax/net/SocketFactory.createSocket(Ljava/lang/String;ILjava/net/InetAddress;I)Ljava/net/Socket;
javax/net/SocketFactory.createSocket(Ljava/net/InetAddress;I)Ljava/net/Socket;
javax/net/SocketFactory.createSocket(Ljava/net/InetAddress;ILjava/net/InetAddress;I)Ljava/net/Socket;



java/nio/ShortBuffer.<init>(IIII[SI)V
java/nio/ShortBuffer.<init>(IIII)V
java/nio/ShortBuffer.allocate(I)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.wrap([SII)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.wrap([S)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.slice()Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.duplicate()Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.asReadOnlyBuffer()Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.get()S
java/nio/ShortBuffer.put(S)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.get(I)S
java/nio/ShortBuffer.put(IS)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.get([SII)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.get([S)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.put(Ljava/nio/ShortBuffer;)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.put([SII)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.put([S)Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.hasArray()Z
java/nio/ShortBuffer.array()[S
java/nio/ShortBuffer.arrayOffset()I
java/nio/ShortBuffer.compact()Ljava/nio/ShortBuffer;
java/nio/ShortBuffer.isDirect()Z
java/nio/ShortBuffer.toString()Ljava/lang/String;
java/nio/ShortBuffer.hashCode()I
java/nio/ShortBuffer.equals(Ljava/lang/Object;)Z
java/nio/ShortBuffer.equals(SS)Z
java/nio/ShortBuffer.compareTo(Ljava/nio/ShortBuffer;)I
java/nio/ShortBuffer.compare(SS)I
java/nio/ShortBuffer.order()Ljava/nio/ByteOrder;
java/nio/ShortBuffer.array()Ljava/lang/Object;
java/nio/ShortBuffer.compareTo(Ljava/lang/Object;)I
java/nio/MappedByteBuffer.<init>(IIIILjava/io/FileDescriptor;)V
java/nio/MappedByteBuffer.<init>(IIII)V
java/nio/MappedByteBuffer.checkMapped()V
java/nio/MappedByteBuffer.mappingOffset()J
java/nio/MappedByteBuffer.mappingAddress(J)J
java/nio/MappedByteBuffer.mappingLength(J)J
java/nio/MappedByteBuffer.isLoaded()Z
java/nio/MappedByteBuffer.load()Ljava/nio/MappedByteBuffer;
java/nio/MappedByteBuffer.force()Ljava/nio/MappedByteBuffer;
java/nio/MappedByteBuffer.isLoaded0(JJI)Z
java/nio/MappedByteBuffer.load0(JJ)V
java/nio/MappedByteBuffer.force0(Ljava/io/FileDescriptor;JJ)V
java/nio/LongBuffer.<init>(IIII[JI)V
java/nio/LongBuffer.<init>(IIII)V
java/nio/LongBuffer.allocate(I)Ljava/nio/LongBuffer;
java/nio/LongBuffer.wrap([JII)Ljava/nio/LongBuffer;
java/nio/LongBuffer.wrap([J)Ljava/nio/LongBuffer;
java/nio/LongBuffer.slice()Ljava/nio/LongBuffer;
java/nio/LongBuffer.duplicate()Ljava/nio/LongBuffer;
java/nio/LongBuffer.asReadOnlyBuffer()Ljava/nio/LongBuffer;
java/nio/LongBuffer.get()J
java/nio/LongBuffer.put(J)Ljava/nio/LongBuffer;
java/nio/LongBuffer.get(I)J
java/nio/LongBuffer.put(IJ)Ljava/nio/LongBuffer;
java/nio/LongBuffer.get([JII)Ljava/nio/LongBuffer;
java/nio/LongBuffer.get([J)Ljava/nio/LongBuffer;
java/nio/LongBuffer.put(Ljava/nio/LongBuffer;)Ljava/nio/LongBuffer;
java/nio/LongBuffer.put([JII)Ljava/nio/LongBuffer;
java/nio/LongBuffer.put([J)Ljava/nio/LongBuffer;
java/nio/LongBuffer.hasArray()Z
java/nio/LongBuffer.array()[J
java/nio/LongBuffer.arrayOffset()I
java/nio/LongBuffer.compact()Ljava/nio/LongBuffer;
java/nio/LongBuffer.isDirect()Z
java/nio/LongBuffer.toString()Ljava/lang/String;
java/nio/LongBuffer.hashCode()I
java/nio/LongBuffer.equals(Ljava/lang/Object;)Z
java/nio/LongBuffer.equals(JJ)Z
java/nio/LongBuffer.compareTo(Ljava/nio/LongBuffer;)I
java/nio/LongBuffer.compare(JJ)I
java/nio/LongBuffer.order()Ljava/nio/ByteOrder;
java/nio/LongBuffer.array()Ljava/lang/Object;
java/nio/LongBuffer.compareTo(Ljava/lang/Object;)I
java/nio/IntBuffer.<init>(IIII[II)V
java/nio/IntBuffer.<init>(IIII)V
java/nio/IntBuffer.allocate(I)Ljava/nio/IntBuffer;
java/nio/IntBuffer.wrap([III)Ljava/nio/IntBuffer;
java/nio/IntBuffer.wrap([I)Ljava/nio/IntBuffer;
java/nio/IntBuffer.slice()Ljava/nio/IntBuffer;
java/nio/IntBuffer.duplicate()Ljava/nio/IntBuffer;
java/nio/IntBuffer.asReadOnlyBuffer()Ljava/nio/IntBuffer;
java/nio/IntBuffer.get()I
java/nio/IntBuffer.put(I)Ljava/nio/IntBuffer;
java/nio/IntBuffer.get(I)I
java/nio/IntBuffer.put(II)Ljava/nio/IntBuffer;
java/nio/IntBuffer.get([III)Ljava/nio/IntBuffer;
java/nio/IntBuffer.get([I)Ljava/nio/IntBuffer;
java/nio/IntBuffer.put(Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer;
java/nio/IntBuffer.put([III)Ljava/nio/IntBuffer;
java/nio/IntBuffer.put([I)Ljava/nio/IntBuffer;
java/nio/IntBuffer.hasArray()Z
java/nio/IntBuffer.array()[I
java/nio/IntBuffer.arrayOffset()I
java/nio/IntBuffer.compact()Ljava/nio/IntBuffer;
java/nio/IntBuffer.isDirect()Z
java/nio/IntBuffer.toString()Ljava/lang/String;
java/nio/IntBuffer.hashCode()I
java/nio/IntBuffer.equals(Ljava/lang/Object;)Z
java/nio/IntBuffer.equals(II)Z
java/nio/IntBuffer.compareTo(Ljava/nio/IntBuffer;)I
java/nio/IntBuffer.compare(II)I
java/nio/IntBuffer.order()Ljava/nio/ByteOrder;
java/nio/IntBuffer.array()Ljava/lang/Object;
java/nio/IntBuffer.compareTo(Ljava/lang/Object;)I
java/nio/FloatBuffer.<init>(IIII[FI)V
java/nio/FloatBuffer.<init>(IIII)V
java/nio/FloatBuffer.allocate(I)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.wrap([FII)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.wrap([F)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.slice()Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.duplicate()Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.asReadOnlyBuffer()Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.get()F
java/nio/FloatBuffer.put(F)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.get(I)F
java/nio/FloatBuffer.put(IF)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.get([FII)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.get([F)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.put(Ljava/nio/FloatBuffer;)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.put([FII)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.put([F)Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.hasArray()Z
java/nio/FloatBuffer.array()[F
java/nio/FloatBuffer.arrayOffset()I
java/nio/FloatBuffer.compact()Ljava/nio/FloatBuffer;
java/nio/FloatBuffer.isDirect()Z
java/nio/FloatBuffer.toString()Ljava/lang/String;
java/nio/FloatBuffer.hashCode()I
java/nio/FloatBuffer.equals(Ljava/lang/Object;)Z
java/nio/FloatBuffer.equals(FF)Z
java/nio/FloatBuffer.compareTo(Ljava/nio/FloatBuffer;)I
java/nio/FloatBuffer.compare(FF)I
java/nio/FloatBuffer.order()Ljava/nio/ByteOrder;
java/nio/FloatBuffer.array()Ljava/lang/Object;
java/nio/FloatBuffer.compareTo(Ljava/lang/Object;)I
java/nio/DoubleBuffer.<init>(IIII[DI)V
java/nio/DoubleBuffer.<init>(IIII)V
java/nio/DoubleBuffer.allocate(I)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.wrap([DII)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.wrap([D)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.slice()Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.duplicate()Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.asReadOnlyBuffer()Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.get()D
java/nio/DoubleBuffer.put(D)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.get(I)D
java/nio/DoubleBuffer.put(ID)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.get([DII)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.get([D)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.put(Ljava/nio/DoubleBuffer;)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.put([DII)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.put([D)Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.hasArray()Z
java/nio/DoubleBuffer.array()[D
java/nio/DoubleBuffer.arrayOffset()I
java/nio/DoubleBuffer.compact()Ljava/nio/DoubleBuffer;
java/nio/DoubleBuffer.isDirect()Z
java/nio/DoubleBuffer.toString()Ljava/lang/String;
java/nio/DoubleBuffer.hashCode()I
java/nio/DoubleBuffer.equals(Ljava/lang/Object;)Z
java/nio/DoubleBuffer.equals(DD)Z
java/nio/DoubleBuffer.compareTo(Ljava/nio/DoubleBuffer;)I
java/nio/DoubleBuffer.compare(DD)I
java/nio/DoubleBuffer.order()Ljava/nio/ByteOrder;
java/nio/DoubleBuffer.array()Ljava/lang/Object;
java/nio/DoubleBuffer.compareTo(Ljava/lang/Object;)I
java/nio/CharBuffer.<init>(IIII[CI)V
java/nio/CharBuffer.<init>(IIII)V
java/nio/CharBuffer.allocate(I)Ljava/nio/CharBuffer;
java/nio/CharBuffer.wrap([CII)Ljava/nio/CharBuffer;
java/nio/CharBuffer.wrap([C)Ljava/nio/CharBuffer;
java/nio/CharBuffer.read(Ljava/nio/CharBuffer;)I
java/nio/CharBuffer.wrap(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
java/nio/CharBuffer.wrap(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
java/nio/CharBuffer.slice()Ljava/nio/CharBuffer;
java/nio/CharBuffer.duplicate()Ljava/nio/CharBuffer;
java/nio/CharBuffer.asReadOnlyBuffer()Ljava/nio/CharBuffer;
java/nio/CharBuffer.get()C
java/nio/CharBuffer.put(C)Ljava/nio/CharBuffer;
java/nio/CharBuffer.get(I)C
java/nio/CharBuffer.getUnchecked(I)C
java/nio/CharBuffer.put(IC)Ljava/nio/CharBuffer;
java/nio/CharBuffer.get([CII)Ljava/nio/CharBuffer;
java/nio/CharBuffer.get([C)Ljava/nio/CharBuffer;
java/nio/CharBuffer.put(Ljava/nio/CharBuffer;)Ljava/nio/CharBuffer;
java/nio/CharBuffer.put([CII)Ljava/nio/CharBuffer;
java/nio/CharBuffer.put([C)Ljava/nio/CharBuffer;
java/nio/CharBuffer.put(Ljava/lang/String;II)Ljava/nio/CharBuffer;
java/nio/CharBuffer.put(Ljava/lang/String;)Ljava/nio/CharBuffer;
java/nio/CharBuffer.hasArray()Z
java/nio/CharBuffer.array()[C
java/nio/CharBuffer.arrayOffset()I
java/nio/CharBuffer.compact()Ljava/nio/CharBuffer;
java/nio/CharBuffer.isDirect()Z
java/nio/CharBuffer.hashCode()I
java/nio/CharBuffer.equals(Ljava/lang/Object;)Z
java/nio/CharBuffer.equals(CC)Z
java/nio/CharBuffer.compareTo(Ljava/nio/CharBuffer;)I
java/nio/CharBuffer.compare(CC)I
java/nio/CharBuffer.toString()Ljava/lang/String;
java/nio/CharBuffer.toString(II)Ljava/lang/String;
java/nio/CharBuffer.length()I
java/nio/CharBuffer.charAt(I)C
java/nio/CharBuffer.subSequence(II)Ljava/nio/CharBuffer;
java/nio/CharBuffer.append(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
java/nio/CharBuffer.append(Ljava/lang/CharSequence;II)Ljava/nio/CharBuffer;
java/nio/CharBuffer.append(C)Ljava/nio/CharBuffer;
java/nio/CharBuffer.order()Ljava/nio/ByteOrder;
java/nio/CharBuffer.chars()Ljava/util/stream/IntStream;
java/nio/CharBuffer.array()Ljava/lang/Object;
java/nio/CharBuffer.compareTo(Ljava/lang/Object;)I
java/nio/CharBuffer.append(C)Ljava/lang/Appendable;
java/nio/CharBuffer.append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
java/nio/CharBuffer.append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
java/nio/CharBuffer.subSequence(II)Ljava/lang/CharSequence;
java/nio/CharBuffer.lambda$chars$0()Ljava/util/Spliterator$OfInt;
java/nio/ByteBuffer.<init>(IIII[BI)V
java/nio/ByteBuffer.<init>(IIII)V
java/nio/ByteBuffer.allocateDirect(I)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.allocate(I)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.wrap([BII)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.wrap([B)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.slice()Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.duplicate()Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asReadOnlyBuffer()Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.get()B
java/nio/ByteBuffer.put(B)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.get(I)B
java/nio/ByteBuffer.put(IB)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.get([BII)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.get([B)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.put([BII)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.put([B)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.hasArray()Z
java/nio/ByteBuffer.array()[B
java/nio/ByteBuffer.arrayOffset()I
java/nio/ByteBuffer.compact()Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.isDirect()Z
java/nio/ByteBuffer.toString()Ljava/lang/String;
java/nio/ByteBuffer.hashCode()I
java/nio/ByteBuffer.equals(Ljava/lang/Object;)Z
java/nio/ByteBuffer.equals(BB)Z
java/nio/ByteBuffer.compareTo(Ljava/nio/ByteBuffer;)I
java/nio/ByteBuffer.compare(BB)I
java/nio/ByteBuffer.order()Ljava/nio/ByteOrder;
java/nio/ByteBuffer.order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer._get(I)B
java/nio/ByteBuffer._put(IB)V
java/nio/ByteBuffer.getChar()C
java/nio/ByteBuffer.putChar(C)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.getChar(I)C
java/nio/ByteBuffer.putChar(IC)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asCharBuffer()Ljava/nio/CharBuffer;
java/nio/ByteBuffer.getShort()S
java/nio/ByteBuffer.putShort(S)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.getShort(I)S
java/nio/ByteBuffer.putShort(IS)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asShortBuffer()Ljava/nio/ShortBuffer;
java/nio/ByteBuffer.getInt()I
java/nio/ByteBuffer.putInt(I)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.getInt(I)I
java/nio/ByteBuffer.putInt(II)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asIntBuffer()Ljava/nio/IntBuffer;
java/nio/ByteBuffer.getLong()J
java/nio/ByteBuffer.putLong(J)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.getLong(I)J
java/nio/ByteBuffer.putLong(IJ)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asLongBuffer()Ljava/nio/LongBuffer;
java/nio/ByteBuffer.getFloat()F
java/nio/ByteBuffer.putFloat(F)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.getFloat(I)F
java/nio/ByteBuffer.putFloat(IF)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asFloatBuffer()Ljava/nio/FloatBuffer;
java/nio/ByteBuffer.getDouble()D
java/nio/ByteBuffer.putDouble(D)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.getDouble(I)D
java/nio/ByteBuffer.putDouble(ID)Ljava/nio/ByteBuffer;
java/nio/ByteBuffer.asDoubleBuffer()Ljava/nio/DoubleBuffer;
java/nio/ByteBuffer.array()Ljava/lang/Object;
java/nio/ByteBuffer.compareTo(Ljava/lang/Object;)I
java/nio/Buffer.<init>(IIII)V
java/nio/Buffer.capacity()I
java/nio/Buffer.position()I
java/nio/Buffer.position(I)Ljava/nio/Buffer;
java/nio/Buffer.limit()I
java/nio/Buffer.limit(I)Ljava/nio/Buffer;
java/nio/Buffer.mark()Ljava/nio/Buffer;
java/nio/Buffer.reset()Ljava/nio/Buffer;
java/nio/Buffer.clear()Ljava/nio/Buffer;
java/nio/Buffer.flip()Ljava/nio/Buffer;
java/nio/Buffer.rewind()Ljava/nio/Buffer;
java/nio/Buffer.remaining()I
java/nio/Buffer.hasRemaining()Z
java/nio/Buffer.isReadOnly()Z
java/nio/Buffer.hasArray()Z
java/nio/Buffer.array()Ljava/lang/Object;
java/nio/Buffer.arrayOffset()I
java/nio/Buffer.isDirect()Z
java/nio/Buffer.nextGetIndex()I
java/nio/Buffer.nextGetIndex(I)I
java/nio/Buffer.nextPutIndex()I
java/nio/Buffer.nextPutIndex(I)I
java/nio/Buffer.checkIndex(I)I
java/nio/Buffer.checkIndex(II)I
java/nio/Buffer.markValue()I
java/nio/Buffer.truncate()V
java/nio/Buffer.discardMark()V
java/nio/Buffer.checkBounds(III)V

